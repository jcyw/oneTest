//Generated by tools/gen_protocol_pb
syntax = "proto3";

message UserInfo {
    int32 Level = 1;
    int32 Exp = 2;
    string Name = 3;
    int32 Gem = 4;
    int32 X = 5;
    int32 Y = 6;
    int32 MaxMonsterLevel = 7;
    int32 SearchUsed = 8;
    string AllianceId = 9;
    string AllianceName = 10;
    int64 Honor = 11;
    int64 Power = 12;
    int32 AlliancePos = 13;
    int64 AllianceMessageAt = 14;
    int32 ALlianceMessageTimes = 15;
    string Server = 16;
    string Declaration = 17;
    int32 HeroLevel = 18;
    int64 HeroExp = 19;
    repeated Weapon Weapons = 20;
    int32 Flag = 21;
    int32 Energy = 22;
    string Avatar = 23;
    int32 Image = 24;
    int32 Kills = 25;
    int64 OnlineBonusTime = 26;
    int32 VipInfo = 27;
    bool VipActivated = 28;
    int32 VipLevel = 29;
    int32 VipPoints = 30;
    int32 Language = 31;
    int64 VipExpiration = 32;
    int64 EnergyRefreshAt = 33;
    int32 Bust = 34;
    bool IsGodLike = 35;
    int32 GuideStep = 36;
    int64 CreatedAt = 37;
    bool AllianceJoinRecommend = 38;
    bool FirstJoinUnion = 39;
    repeated TriggerGuideInfo TriggerGuides = 40;
    bool AllianceTechCanContri = 41;
    bool RookieShield = 42;
    bool BaseRecovered = 43;
    bool DeclareModified = 44;
    int64 RookieExpireAt = 45;
    int32 GuideVersion = 46;
    bool GuideFinished = 47;
    repeated DressUpUsing DressUpUsing = 48;
}
    
message Tech {
    int32 ConfId = 1;
    int32 Level = 2;
    int32 Type = 3;
}
    
message Resource {
    int32 Category = 1;
    int64 Amount = 2;
    int64 SafeAmount = 3;
}
    
message Equip {
    int32 Id = 1;
    int32 ConfId = 2;
    int32 Level = 3;
}
    
message Building {
    int32 Id = 1;
    int32 ConfId = 2;
    int32 Pos = 3;
    int32 Level = 4;
}
    
message Point {
    int32 X = 1;
    int32 Y = 2;
}
    
message CollectAmount {
    int32 BuildingId = 1;
    int32 Amount = 2;
}
    
message AllianceShopLog {
    string UserName = 1;
    int32 ConfId = 2;
    int64 CreatedAt = 3;
    int32 Amount = 4;
}
    
message AllianceShopItem {
    int32 ConfId = 1;
    int32 Amount = 2;
    int32 Mark = 3;
}
    
message AllianceVoteMember {
    string Uuid = 1;
    repeated string Votes = 2;
    string PlayerId = 3;
}
    
message AllianceVoteMemberInfo {
    string Uuid = 1;
    string PlayerId = 2;
    string Name = 3;
    int64 Power = 4;
    string Icon = 5;
    repeated string Votes = 6;
    repeated DressUpUsing DressUpUsing = 7;
}
    
message AllianceVoteItem {
    string Uuid = 1;
    string PlayerId = 2;
    string PlayerName = 3;
    string Title = 4;
    string Content = 5;
    string Icon = 6;
    repeated string Options = 7;
    int32 VoteNum = 8;
    int32 Time = 9;
    string Desc = 10;
    int32 Status = 11;
    int64 Start = 12;
    int32 Visible = 13;
}
    
message AllianceItem {
    string ItemId = 1;
    int32 ConfId = 2;
    int64 Start = 3;
    int32 Amount = 4;
    repeated string GetList = 5;
}
    
message AllianceGift {
    int32 Exp = 1;
    int32 ConfId = 2;
    int32 RefreshNum = 3;
    int32 TLevel = 4;
    int32 TExp = 5;
}
    
message MissionBuff {
    int32 Category = 1;
    int32 Value = 2;
}
    
message BanPlayerItem {
    string AllianceId = 1;
    string AllianceName = 2;
    string AllianceShort = 3;
    string Avatar = 4;
    int32 VipLevel = 5;
    string PlayerId = 6;
    string PlayerName = 7;
    repeated DressUpUsing DressUpUsing = 8;
}
    
message BanAllianceItem {
    string AllianceId = 1;
    string AllianceName = 2;
    string AllianceShort = 3;
    int32 Avatar = 4;
}
    
message ChatLimitItem {
    string ChatType = 1;
    int64 StartSpeak = 2;
    int32 TotalNum = 3;
}
    
message AllianceBuildingBriefInfo {
    int32 ConfId = 1;
    string Name = 2;
    int32 State = 3;
    int32 ArchiValue = 4;
    int64 ChangeTime = 5;
    float SpeedPerSec = 6;
    int32 Pos = 7;
    int64 FuncValue = 8;
    int32 RebuildReason = 9;
}
    
message ShareAllianceRecruit {
    string AllianceId = 1;
    string AllianceName = 2;
}
    
message ShareAllianceShopStock {
    int32 ItemId = 1;
    repeated string UserNames = 2;
}
    
message ShareAllianceShopMark {
    int32 ItemId = 1;
}
    
message ShareCastleUpgrade {
    string UserName = 1;
    int32 Level = 2;
}
    
message ShareExitAlliance {
    string UserName = 1;
    string UserId = 2;
}
    
message ShareAllianceFireOut {
    string UserName = 1;
    string UserId = 2;
}
    
message ShareAlliancePresidentChange {
    string PresidentName = 1;
    string UserName = 2;
}
    
message ShareSetAlliancePos {
    string UserName = 1;
    int32 OldPos = 2;
    int32 NowPos = 3;
}
    
message ShareJoinAlliance {
    string UserName = 1;
}
    
message ShareAllianceAssist {
    int32 ResId = 1;
}
    
message ShareBattleRecord {
    string MailId = 1;
}
    
message ShareAllianceBattle {
    string BattleId = 1;
}
    
message ShareMapPos {
    int32 PosX = 1;
    int32 PosY = 2;
}
    
message ShareMailData {
    string UserId = 1;
    string MailId = 2;
}
    
message ShareAllianceCreate {
    string AllianceId = 1;
    string AllianceName = 2;
}
    
message RankMsg {
    int64 Value = 1;
    int32 Rank = 2;
    string UserId = 3;
    string AllianceName = 4;
    string UserAvatar = 5;
    string AllianceId = 6;
    int32 AllianceAvatar = 7;
    string UserName = 8;
    string AllianceShortName = 9;
    int64 Time = 10;
    repeated DressUpUsing DressUpUsing = 11;
}
    
message AllianceFortressBriefInfo {
    int32 ConfId = 1;
    string Name = 2;
    int32 Pos = 3;
}
    
message Weapon {
    int32 Type = 1;
    string Name = 2;
    string Id = 3;
    string Level = 4;
}
    
message Attributes {
    PlayerTotalPower Power = 1;
    UserBattleInfo BattleInfo = 2;
    MilitaryAffairs Military = 3;
    Resources Resource = 4;
    BaseDevelopment Development = 5;
    BaseDefence Defence = 6;
}
    
message PlayerTotalPower {
    int32 TotalPower = 1;
    int32 PlayerPower = 2;
    int32 ArmiesPower = 3;
    int32 BuildingsPower = 4;
    int32 FortificationsPower = 5;
    int32 AlliancePower = 6;
    int32 WeaponsPower = 7;
    int32 HeroPower = 8;
}
    
message UserBattleInfo {
    int32 TotalVictories = 1;
    int32 TotalLost = 2;
    int32 AttackVictories = 3;
    int32 AttackLost = 4;
    int32 DefendVictories = 5;
    int32 DefendLost = 6;
    float Winrate = 7;
    int32 DetectTimes = 8;
    int32 Kills = 9;
    int32 MemberLost = 10;
    int32 MemberCured = 11;
}
    
message MilitaryAffairs {
    int32 TotalMarchingArmies = 1;
    int32 LimitOfArmiesToBattle = 2;
    int32 ArmiesTrainedNum = 3;
    float ArmyTrainingSpeed = 4;
    float MarchingSpeed = 5;
    float MarchingSpeedOfDetect = 6;
    float MarchingSpeedOfAttackFieldEnemies = 7;
    float CombatVehiclesAttack = 8;
    float CombatVehiclesDefence = 9;
    float CombatVehiclesLife = 10;
    float CombatVehiclesDealtDamage = 11;
    float CombatVehiclesTakenDamage = 12;
    float TanksAttack = 13;
    float TanksDefence = 14;
    float TanksLife = 15;
    float TanksDealtDamage = 16;
    float TanksTakenDamage = 17;
    float AirForceAttack = 18;
    float AirForceDefence = 19;
    float AirForceLife = 20;
    float AirForceDealtDamage = 21;
    float AirForceTakenDamage = 22;
    float RocketForceAttack = 23;
    float RocketForceDefence = 24;
    float RocketForceLife = 25;
    float RocketForceDealtDamage = 26;
    float RocketForceTakenDamage = 27;
}
    
message Resources {
    float OilProduction = 1;
    float OilExploitationSpeed = 2;
    float OreProduction = 3;
    float OreMiningSpeed = 4;
    float AlloyProduction = 5;
    float AlloyCollectSpeed = 6;
    float RareEarthProduction = 7;
    float RareEarthMiningSpeed = 8;
    float StorageLimit = 9;
    float ProduceCombatVehiclesConsumed = 10;
    float ProduceTankConsumed = 11;
    float ProduceAirForceConsumed = 12;
    float ProduceRocketForceConsumed = 13;
}
    
message BaseDevelopment {
    float BuildingSpeed = 1;
    float TechResearchSpeed = 2;
    float ArmyMaintenanceCost = 3;
    float ArmyLoad = 4;
    float HospitalCapacity = 5;
    float HealSpeed = 6;
    float HealCost = 7;
    float EnergyRegainSpeed = 8;
    float TechResearchCost = 9;
    float BuidlingAndUpgradeOilCost = 10;
    float BuildingAndUpgradeOreCost = 11;
    float BuildingAndUpgradeAlloyCost = 12;
    float BuildingAndUpgradeRareEarthCost = 13;
    float ResearchOilTechCost = 14;
    float ResearchOreTechCost = 15;
    float ResearchAlloyTechCost = 16;
    float ResearchRareEarthTechCost = 17;
}
    
message BaseDefence {
    int32 DefenceValue = 1;
    float FortificationsAttack = 2;
    float ProduceDefenceWeapons = 3;
    int32 FortificationsCapicity = 4;
    float DamageToCombatVehicles = 5;
    float DamageToTanks = 6;
    float DamageToAirForce = 7;
    float DefendCityAttack = 8;
    float DefendCityDefence = 9;
    float BunkerAttack = 10;
    float BunkerAttackSpeed = 11;
}
    
message RenameInfo {
    int32 ConfId = 1;
    string Name = 2;
}
    
message VipGoods {
    int32 Id = 1;
    int32 Amount = 2;
}
    
message VipActivateGoods {
    int32 Id = 1;
    int32 Amount = 2;
}
    
message VipPointsGoods {
    int32 Id = 1;
    int32 Amount = 2;
}
    
message PlayerSiegeInfo {
    string PlayerId = 1;
    string AllianceId = 2;
    int32 Round = 3;
    int32 Fail = 4;
    int32 Score = 5;
    bool End = 6;
    string RessistRewardTime = 7;
    int32 BaseX = 8;
    int32 BaseY = 9;
}
    
message AllianceSiegeInfo {
    string AllianceId = 1;
    int32 Times = 2;
    int32 Round = 3;
    int32 Score = 4;
    int32 SiegeRallyNum = 5;
    bool End = 6;
    int32 FightingNum = 7;
    int64 FinishAtMost = 8;
    int32 EnemyBaseX = 9;
    int32 EnemyBaseY = 10;
    int32 SumRound = 11;
    int32 EndNum = 12;
}
    
message RankElement {
    string PlayerId = 1;
    int32 RecommendScore = 2;
    int64 Power = 3;
    int32 Language = 4;
    int64 ActivedAt = 5;
    string Extend = 6;
}
    
message Permission {
    int32 Permission = 1;
    int32 Position = 2;
    bool Enable = 3;
}
    
message InvestStatus {
    int32 Category = 1;
    int32 Status = 2;
}
    
message HeroSkill {
    int32 ConfId = 1;
    int32 Level = 2;
}
    
message TitleInfo {
    int32 ConfId = 1;
    string UserId = 2;
}
    
message FinishedTask {
    int32 Id = 1;
    bool Acknowledged = 2;
}
    
message SkillPagePoints {
    int32 Page = 1;
    int32 Points = 2;
}
    
message SupplyTimes {
    int32 Level = 1;
    int32 FreeTimes = 2;
    int32 RefreshAt = 3;
}
    
message KingSkillUsedTimes {
    int32 Key = 1;
    int32 Times = 2;
}
    
message KingSkillCoolDown {
    int32 Key = 1;
    int64 CoolDownAt = 2;
}
    
message CombinedMissionTeamInfo {
    string UserId = 1;
    string EventId = 2;
}
    
message LuaActivityFinish {
    int32 ActivityId = 1;
    int32 Amount = 2;
}
    
message ShareAllianceArmyAssist {
    string UserId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message KingSkillInfo {
    int32 Key = 1;
    int64 CoolDownAt = 2;
    int32 UsedTimes = 3;
}
    
message NotifySettingInfo {
    int32 SettingId = 1;
    bool Open = 2;
}
    
message AllianceVoteTranslation {
    string Theme = 1;
    repeated string Options = 2;
}
    
message TriggerGuideInfo {
    int32 Id = 1;
    int32 Step = 2;
    bool Finish = 3;
}
    
message BeautySkill {
    int32 Id = 1;
    int32 Level = 2;
    int32 Exp = 3;
}
    
message ThreeClearChapterInfo {
    int32 Id = 1;
    bool Unlocked = 2;
    bool Clear = 3;
    int32 CurrentMission = 4;
}
    
message ThreeClearMissionInfo {
    int32 Id = 1;
    bool Unlocked = 2;
    bool Passed = 3;
}
    
message AllianceBattleCreateInfo {
    string Uuid = 1;
    string AllianceId = 2;
    bool Single = 3;
    string UserId = 4;
}
    
message GodzillaBonusStatusInfo {
    int32 Id = 1;
    int32 Status = 2;
}
    
message SkillGetResInfo {
    int32 BuildId = 1;
    int32 Category = 2;
    int32 Amount = 3;
}
    
message AvaliableMapUnit {
    int32 ConfId = 1;
    int32 X = 2;
    int32 Y = 3;
    bool Banned = 4;
    int64 CreateAt = 5;
}
    
message ShareAllianceReplacePresident {
    string OldPresident = 1;
}
    
message PlayerShowInfo {
    string PlayerId = 1;
    string ServerId = 2;
    string Name = 3;
    string Avatar = 4;
    string AllianceId = 5;
    string AllianceShortName = 6;
    int32 BaseX = 7;
    int32 BaseY = 8;
    bool BaseRecovered = 9;
    int64 ActiveAt = 10;
    int32 AlliancePos = 11;
    int32 Language = 12;
    string Alliance = 13;
    repeated DressUpUsing DressUpUsing = 14;
}
    
message TitleDetailInfo {
    int32 TitleId = 1;
    PlayerShowInfo Info = 2;
}
    
message KingdomGiftInfo {
    int32 Id = 1;
    repeated PlayerShowInfo Receivers = 2;
}
    
message KingdomWarLog {
    string Uuid = 1;
    int32 Id = 2;
    repeated string Params = 3;
    string Avatar = 4;
    int64 Time = 5;
    string UserId = 6;
    repeated DressUpUsing DressUpUsing = 7;
}
    
message UnlockedTask {
    int32 Id = 1;
    int32 Type = 2;
    int32 Process = 3;
}
    
message UnlockedTasks {
    repeated UnlockedTask Tasks = 1;
}
    
message AccomplishedTask {
    int32 Id = 1;
    int32 Type = 2;
    bool AwardTaken = 3;
}
    
message AccomplishedTasks {
    repeated AccomplishedTask Tasks = 1;
}
    
message KingdomGiftRecord {
    string Uuid = 1;
    string KingAlliance = 2;
    string KingName = 3;
    string ReceiverAlliance = 4;
    string ReceiverName = 5;
    int32 GiftId = 6;
    int32 SenderTitle = 7;
}
    
message RpcOKRsp {
    bool Ok = 1;
}
    
message RpcGetRolesReq {
    string CurrentRoleId = 1;
}
    
message RpcGetRolesRsp {
    repeated RpcEnterServerReq Roles = 1;
}
    
message RpcRoleInfo {
    string RoleId = 1;
    string Name = 2;
    int32 CenterLevel = 3;
    string Avatar = 4;
    string ServerId = 5;
}
    
message RpcAddRoleReq {
    string CurrentRoleId = 1;
}
    
message RpcSwitchRoleReq {
    string CurrentRoleId = 1;
    string TargetRoleId = 2;
}
    
message RpcEnterServerReq {
    string CurrentRoleId = 1;
    string ServerId = 2;
}
    
message RpcSetBindReq {
    string ServerId = 1;
    string PlayerId = 2;
}
    
message RpcGetBindInfoReq {
    string PlayerId = 1;
}
    
message RpcGetBindInfoRsp {
    bool IsBound = 1;
}
    
message MapOwner {
    string UserId = 1;
    string Name = 2;
    string Alliance = 3;
    int32 BaseLevel = 4;
    string AllianceId = 5;
    string Avatar = 6;
    string UserDesc = 7;
    int64 ProtectedAt = 8;
    int32 Flag = 9;
    int64 ResProtectedAt = 10;
    int32 ShieldSource = 11;
    int64 ServerShieldBroken = 12;
    repeated DressUpUsing DressUpUsing = 13;
}
    
message MapMarchLine {
    string Uuid = 1;
    string OwnerId = 2;
    int32 Category = 3;
    bool IsReturn = 4;
    int64 CreatedAt = 5;
    int64 FinishAt = 6;
    int32 Duration = 7;
    int32 StartX = 8;
    int32 StartY = 9;
    int32 StopX = 10;
    int32 StopY = 11;
    bool IsCancel = 12;
    string TargetOwnerId = 13;
    string TargetAllianceId = 14;
    int32 SpeedChangeDistance = 15;
    int64 SpeedChangeAt = 16;
    int32 StartPointSize = 17;
    int32 StopPointSize = 18;
    string TargetName = 19;
    repeated int32 ArmyTypes = 20;
    int32 ArmyTotal = 21;
    string AllianceBattleId = 22;
    bool IsRally = 23;
    bool FightFinish = 24;
    int32 TargetMapType = 25;
}
    
message MapMiner {
    int32 MineId = 1;
    string UserId = 2;
    string EventId = 3;
    float MineSpeed = 4;
    int64 MineAt = 5;
    int64 FinishAt = 6;
    int32 ArmyLoad = 7;
    repeated Army Armies = 8;
    repeated Buff Buffs = 9;
    string ServerId = 10;
    int32 Mined = 11;
    int64 RefreshedAt = 12;
    repeated GiantBeast Beasts = 13;
    int32 MineStartLeft = 14;
}
    
message AllianceMiner {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    string EventId = 4;
    int32 MineSpeed = 5;
    int64 MineAt = 6;
    int64 FinishAt = 7;
    int32 ArmyLoad = 8;
    repeated DressUpUsing DressUpUsing = 9;
}
    
message MissionTeam {
    string UserId = 1;
    string AllianceId = 2;
    string EventId = 3;
    string ServerId = 4;
    repeated Army Armies = 5;
    repeated Army InjuredArmies = 6;
    repeated Buff Buffs = 7;
    int32 MarchSpeed = 8;
    int64 JoinAt = 9;
    repeated GiantBeast Beasts = 10;
    string Name = 11;
}
    
message MonsterTeam {
    int32 MonsterId = 1;
    int32 Amount = 2;
}
    
message RallyMonsterTeams {
    repeated MonsterTeam Teams = 1;
}
    
message PAccount {
    string Uuid = 1;
    int32 Platform = 2;
    string PlatformId = 3;
    repeated string RoleIds = 4;
    string CurrentRole = 5;
    string Device = 6;
    string DeviceOS = 7;
    string DeviceId = 8;
    string DeviceAdId = 9;
}
    
message Role {
    string Uuid = 1;
    string ServerId = 2;
    string PAccountId = 3;
}
    
message GetAchievementInfoParams {
    
}
    
message GetAchievementInfoRsp {
    repeated AccomplishedAchievement Accomplished = 1;
    repeated UnlockedAchievement Unlocked = 2;
}
    
message GetAchievementAwardsParams {
    int32 Id = 1;
}
    
message GetAchievementAwardsRsp {
    int64 FinishTime = 1;
    Rewards Rewards = 2;
}
    
message AccomplishedAchievement {
    int32 Id = 1;
    int64 FinishTime = 2;
    bool AwardTaken = 3;
}
    
message AccomplishedAchievements {
    repeated AccomplishedAchievement Achievements = 1;
}
    
message UnlockedAchievement {
    int32 Id = 1;
    int32 CurrentProcess = 2;
}
    
message GetActivityInfoRsp {
    string Info = 1;
}
    
message GetCrazyExchangeInfoParams {
    
}
    
message GetCrazyExchangeInfoRsp {
    int32 ItemAmount = 1;
    repeated CrazyExchangeAward AwardInfo = 2;
}
    
message CrazyExchangeAward {
    int32 Category = 1;
    int32 RestTimes = 2;
}
    
message GetCrazyExchangeAwardParams {
    int32 Category = 1;
}
    
message GetCrazyExchangeAwardRsp {
    int32 RestItems = 1;
    int32 RestTimes = 2;
}
    
message ActivityOpen {
    int32 ActivityId = 1;
    int64 OpenTill = 2;
}
    
message ActivityClose {
    int32 ActivityId = 1;
}
    
message SysActivityInfo {
    int32 Id = 1;
    int64 StartAt = 2;
    int64 EndAt = 3;
    bool Open = 4;
    int32 Category = 5;
    repeated int32 Param = 6;
    int32 Order = 7;
    bool ShowInCenter = 8;
    bool ShowInMain = 9;
    int64 HideTime = 10;
    int32 Stage = 11;
    int64 ReadyTill = 12;
    int32 Uuid = 13;
    int32 Trigger = 14;
}
    
message GetSysActivitiesInfoParams {
    
}
    
message GetSysActivitiesInfoRsp {
    repeated SysActivityInfo Infos = 1;
}
    
message GetSysActivityInfoParams {
    int32 Id = 1;
}
    
message GetSysActivityInfoRsp {
    SysActivityInfo Info = 1;
}
    
message IdPair {
    int32 Uuid = 1;
    int32 ActivityId = 2;
}
    
message ActivityInfo {
    int32 Uuid = 1;
    int32 ActivityId = 2;
    int64 Beginning = 3;
    int64 Ending = 4;
    int64 RefreshAt = 5;
    int32 Day = 6;
    bool Open = 7;
    int32 LevelLimit = 8;
}
    
message OpenGiftGroup {
    int32 GroupId = 1;
    int32 GiftId = 2;
}
    
message CloseGiftGroup {
    int32 GroupId = 1;
}
    
message ProfitActivityUnlock {
    int32 Id = 1;
}
    
message GetActivityBuildingInfoParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message GetActivityBuildingInfoRsp {
    int32 ConfId = 1;
    int32 PlayerVisitTimes = 2;
    int32 TotalVisitTimes = 3;
    int32 PlayerRewardTimes = 4;
}
    
message GetActivityExchangeInfoParams {
    int32 Id = 1;
}
    
message GetActivityExchangeInfoRsp {
    repeated ExchangeInfo RestTimes = 1;
}
    
message ActivityExchangeRewardParams {
    int32 ActivityId = 1;
    int32 ExchangeId = 2;
    int32 Num = 3;
}
    
message MonsterVisitInfo {
    int32 ActivityId = 1;
    bool DailyTimesFull = 2;
    repeated int32 VisitFullRecs = 3;
    int64 UpdateTime = 4;
    repeated AvaliableMapUnit Avaliable = 5;
}
    
message MemorialDayTreasure {
    int32 ItemId = 1;
    int32 Amount = 2;
    int32 Category = 3;
}
    
message ArmsRaceTreasure {
    int32 ItemId = 1;
    int32 Amount = 2;
    int32 Category = 3;
}
    
message EagleHuntInfo {
    repeated int32 Targets = 1;
    int32 Hunted = 2;
    int64 FuelAddAt = 3;
    int32 Fuel = 4;
    bool Inited = 5;
    bool NoChance = 6;
    string EventId = 7;
    int32 HuntTimes = 8;
}
    
message ActivityTimeInfo {
    int32 Id = 1;
    int64 StartAt = 2;
    int64 EndAt = 3;
}
    
message ExchangeInfo {
    int32 Id = 1;
    int32 RestTimes = 2;
    int32 Uuid = 3;
}
    
message GetActivityTaskInfosParams {
    
}
    
message GetActivityTaskInfosRsp {
    int64 RefreshAt = 1;
    repeated UnlockedActivityTask Unlocked = 2;
    repeated AccomplishedActivityTask Accomplished = 3;
}
    
message GetActivityTaskAwardParams {
    int32 Id = 1;
}
    
message UnlockedActivityTask {
    int32 Id = 1;
    int32 CurrentProcess = 2;
}
    
message AccomplishedActivityTask {
    int32 Id = 1;
    bool AwardTaken = 2;
}
    
message ActivityTaskRefresh {
    
}
    
message GetHuntFoxTaskInfosParams {
    
}
    
message GetHuntFoxTaskInfosRsp {
    int64 RefreshAt = 1;
    repeated UnlockedHuntFoxTask Unlocked = 2;
    repeated AccomplishedHuntFoxTask Accomplished = 3;
}
    
message GetHuntFoxTaskAwardParams {
    int32 Id = 1;
}
    
message UnlockedHuntFoxTask {
    int32 Id = 1;
    int32 CurrentProcess = 2;
}
    
message AccomplishedHuntFoxTask {
    int32 Id = 1;
    bool AwardTaken = 2;
}
    
message HuntFoxRefresh {
    
}
    
message AllianceCreateParams {
    string Name = 1;
    string Desc = 2;
    bool IsGodLike = 3;
}
    
message AllianceCreateRsp {
    string Name = 1;
    string Desc = 2;
}
    
message AllianceChangeDescParams {
    string Desc = 1;
}
    
message AllianceChangeNameParams {
    string Name = 1;
}
    
message AllianceChangeShortNameParams {
    string ShortName = 1;
}
    
message AllianceQuitParams {
    string AllianceId = 1;
}
    
message AllianceFireParams {
    string MemberId = 1;
}
    
message AllianceMembersParams {
    string AllianceId = 1;
}
    
message AllianceMembersRsp {
    repeated AllianceMember Members = 1;
    repeated ApplyOfficer ApplyOfficers = 2;
}
    
message AllianceReplacePresidentParams {
    string PresidentId = 1;
}
    
message AllianceInfoParams {
    string AllianceId = 1;
}
    
message AllianceSearchParams {
    string Name = 1;
}
    
message AllianceSearchRsp {
    repeated AllianceInfo Alliances = 1;
}
    
message AllianceGetPageParams {
    int32 Offset = 1;
    int32 Limit = 2;
}
    
message AllianceGetPageRsp {
    int32 Offset = 1;
    repeated AllianceInfo Alliances = 2;
}
    
message AllianceJoinParams {
    string AllianceId = 1;
}
    
message AllianceFastJoinParams {
    
}
    
message AllianceFastJoinRsp {
    AllianceInfo Alliance = 1;
    int32 Result = 2;
}
    
message AllianceJoinRsp {
    AllianceInfo Alliance = 1;
}
    
message AllianceApplyJoinParams {
    string AllianceId = 1;
    string Msg = 2;
}
    
message AllianceAcceptApplyParams {
    string ApplyId = 1;
}
    
message AllianceRefuseApplyParams {
    string ApplyId = 1;
}
    
message AllianceCancelApplyParams {
    string AllianceId = 1;
}
    
message AllianceGetAllAppliesParams {
    string AllianceId = 1;
}
    
message AllianceGetAllAppliesRsp {
    repeated AllianceApply AllianceApplies = 1;
}
    
message AllianceChangePosParams {
    string MemberId = 1;
    int32 Pos = 2;
}
    
message AllianceNameValidParams {
    string Name = 1;
}
    
message AllianceNameValidRsp {
    int32 Result = 1;
}
    
message AllianceInvitePlayerParams {
    string UserId = 1;
}
    
message AllianceSearchPlayerParams {
    string Name = 1;
}
    
message AllianceSearchPlayerRsp {
    repeated AllianceSearchPlayerInfo Players = 1;
}
    
message Alliance {
    string Uuid = 1;
    string ServerId = 2;
    string Name = 3;
    string ShortName = 4;
    string President = 5;
    string PresidentId = 6;
    string Desc = 7;
    int32 Flag = 8;
    int32 Language = 9;
    int32 Member = 10;
    double Power = 11;
    bool FreeJoin = 12;
    int32 FreeJoinLevel = 13;
    int64 FreeJoinPower = 14;
    int32 MemberLimit = 15;
    int64 Honor = 16;
    int64 MessageIndex = 17;
    string NameR1 = 18;
    string NameR2 = 19;
    string NameR3 = 20;
    string NameR4 = 21;
    string NameR5 = 22;
    int32 SocialType = 23;
    string SocialId = 24;
    int32 TechTotalLevel = 25;
    bool NameChanged = 26;
    bool ShortNameChanged = 27;
    int32 Emblem = 28;
    int64 EmblemExpireAt = 29;
    int32 Beat = 30;
    bool IsGodLike = 31;
    int32 Recommended = 32;
    int64 PresidentLoginAt = 33;
    int64 CreatedAt = 34;
    string Announcement = 35;
}
    
message AllianceInfo {
    string Uuid = 1;
    string ServerId = 2;
    string Name = 3;
    string ShortName = 4;
    string President = 5;
    string PresidentId = 6;
    int32 Avatar = 7;
    string Desc = 8;
    int32 Flag = 9;
    int32 Language = 10;
    int32 Member = 11;
    int64 Power = 12;
    bool FreeJoin = 13;
    int32 FreeJoinLevel = 14;
    int64 FreeJoinPower = 15;
    int32 MemberLimit = 16;
    int64 Honor = 17;
    int64 MessageIndex = 18;
    string NameR1 = 19;
    string NameR2 = 20;
    string NameR3 = 21;
    string NameR4 = 22;
    string NameR5 = 23;
    int32 SocialType = 24;
    string SocialId = 25;
    int32 TechTotalLevel = 26;
    bool NameChanged = 27;
    bool ShortNameChanged = 28;
    int32 Emblem = 29;
    int64 EmblemExpireAt = 30;
    int32 Beat = 31;
    int64 Created = 32;
    string Announcement = 33;
}
    
message AllianceMember {
    string Id = 1;
    string Name = 2;
    int64 Power = 3;
    int32 Position = 4;
    int32 BaseLevel = 5;
    bool IsOnline = 6;
    string Avatar = 7;
    int64 ActiveAt = 8;
    bool OnlineNotice = 9;
    int32 X = 10;
    int32 Y = 11;
    int32 Officer = 12;
    int32 Bust = 13;
    repeated DressUpUsing DressUpUsing = 14;
}
    
message AllianceApply {
    string Uuid = 1;
    string UserId = 2;
    string Name = 3;
    string Avatar = 4;
    int64 Power = 5;
    string Msg = 6;
    bool IsOnline = 7;
    int64 ActiveAt = 8;
    int32 Position = 9;
    int32 BaseLevel = 10;
    int32 Bust = 11;
    repeated DressUpUsing DressUpUsing = 12;
}
    
message AlliancePosChange {
    string UserId = 1;
    int32 AlliancePos = 2;
}
    
message AllianceAcceptInviteParams {
    string AllianceId = 1;
}
    
message AllianceAcceptInviteRsp {
    AllianceInfo Alliance = 1;
}
    
message AllianceRefuseInviteParams {
    string AllianceId = 1;
}
    
message AllianceChangeFlagParams {
    int32 Flag = 1;
}
    
message AllianceChangeLanguageParams {
    int32 Language = 1;
}
    
message AllianceChangeFreeJoinParams {
    bool FreeJoin = 1;
    int32 FreeJoinLevel = 2;
    int64 FreeJoinPower = 3;
}
    
message AllianceShortNameValidParams {
    string ShortName = 1;
}
    
message AllianceMemberWantedParams {
    string AllianceId = 1;
}
    
message AllianceChangeSocialParams {
    int32 SocialType = 1;
    string SocialId = 2;
}
    
message AllianceChangePosNameParams {
    int32 Pos = 1;
    string Name = 2;
}
    
message AllianceChangeOnlineNoticeParams {
    repeated string Add = 1;
    repeated string Del = 2;
}
    
message AllianceMemberOnline {
    string MemberId = 1;
    string Name = 2;
    string Avatar = 3;
    int32 Pos = 4;
    repeated DressUpUsing DressUpUsing = 5;
}
    
message AllianceGetOnlineNoticeMembersParams {
    string AllianceId = 1;
}
    
message AllianceGetOnlineNoticeMembersRsp {
    repeated string MemberIds = 1;
}
    
message AppliedAlliance {
    string AllianceId = 1;
    string ApplyId = 2;
}
    
message UserAllianceInfo {
    string AllianceId = 1;
    string AllianceName = 2;
    int64 AllianceJoinedAt = 3;
    int32 AlliancePos = 4;
    repeated AppliedAlliance AppliedAlliance = 5;
}
    
message RemoveAllianceMemberInfo {
    string AllianceId = 1;
    string MemberId = 2;
    int32 Reason = 3;
}
    
message AllianceTodayWantedTimesParams {
    string AllianceId = 1;
}
    
message AllianceTodayWantedTimesRsp {
    int32 Count = 1;
}
    
message AllianceAbdicateParams {
    string UserId = 1;
}
    
message AllianceSetOfficerParams {
    string UserId = 1;
    int32 Officer = 2;
}
    
message AllianceApplyOfficerParams {
    string UserId = 1;
    int32 Officer = 2;
}
    
message AllianceGetApplyOfficersParams {
    
}
    
message AllianceGetApplyOfficersRsp {
    repeated ApplyOfficer ApplyOfficers = 1;
}
    
message ApplyOfficer {
    string UserId = 1;
    int32 Officer = 2;
}
    
message AllianceChangeEmblemParams {
    int32 Emblem = 1;
}
    
message AllianceSyncNewsParams {
    int32 Offset = 1;
    int32 Limit = 2;
}
    
message AllianceSyncNewsRsp {
    repeated AllianceNews News = 1;
}
    
message AllianceNews {
    int32 Category = 1;
    string Content = 2;
    int64 CreatedAt = 3;
}
    
message AllianceSetPermissionParams {
    repeated Permission Permissions = 1;
}
    
message DisabledPermission {
    int32 Permission = 1;
    int32 Position = 2;
}
    
message AllianceInfoRsp {
    AllianceInfo Alliance = 1;
    repeated DisabledPermission DisabledPermissions = 2;
    repeated AllianceMember Members = 3;
    repeated ApplyOfficer ApplyOfficers = 4;
}
    
message AlliancePublicInfoParams {
    string AllianceId = 1;
}
    
message AlliancePublicInfoRsp {
    AllianceInfo Alliance = 1;
}
    
message AllianceOrderParams {
    string TargetId = 1;
    int32 OrderId = 2;
}
    
message AllianceExistsParams {
    string AllianceId = 1;
}
    
message AllianceExistsRsp {
    bool Exists = 1;
}
    
message AllianceRecommendParams {
    
}
    
message AllianceRecommendRsp {
    bool Have = 1;
    bool IsGodLike = 2;
    string ShortName = 3;
    string Name = 4;
    string Desc = 5;
    string President = 6;
    string AllianceId = 7;
    int32 Avatar = 8;
}
    
message AllianceTitleValidParams {
    string Name = 1;
}
    
message AllianceTitleValidRsp {
    int32 Result = 1;
}
    
message ChangeAllianceAnnouncementParams {
    string Content = 1;
}
    
message AllianceAnnouncement {
    string Content = 1;
}
    
message ThumbUpMemberLevelUpParams {
    string Target = 1;
    string MessageId = 2;
}
    
message ThumbUpMemberLevelUpRsp {
    int32 Result = 1;
    repeated Reward Rewards = 2;
}
    
message AllianceBattleInfosParams {
    string AllianceId = 1;
}
    
message AllianceBattleCreateParams {
    int32 Category = 1;
    int32 DurationType = 2;
    int32 TargetX = 3;
    int32 TargetY = 4;
    repeated Army Armies = 5;
    int32 BeastId = 6;
}
    
message AllianceBattleDisbandParams {
    string AllianceBattleId = 1;
}
    
message AllianceBattleRemovalParams {
    string AllianceBattleId = 1;
    string MissionId = 2;
}
    
message AllianceBattleSpeedupParams {
    string AllianceBattleId = 1;
    string MissionId = 2;
    int32 ConfId = 3;
}
    
message AllianceBattleLogsParams {
    int32 Offset = 1;
    int32 Limit = 2;
}
    
message AllianceBattleLogsRsp {
    int32 Offset = 1;
    repeated AllianceBattleLog Logs = 2;
}
    
message AllianceBattleInfosRsp {
    repeated AllianceBattle Battles = 1;
    repeated AllianceBattleMission Missions = 2;
    repeated AllianceBattle Defences = 3;
}
    
message AllianceBattleMarchParams {
    string AllianceBattleId = 1;
}
    
message AllianceBattleJoinParams {
    string HeroId = 1;
    repeated Army Armies = 2;
    string AllianceBattleId = 3;
    int32 BeastId = 4;
}
    
message AllianceBattleAssistParams {
    int32 X = 1;
    int32 Y = 2;
    string HeroId = 3;
    repeated Army Armies = 4;
    int32 BeastId = 5;
    string TargetId = 6;
}
    
message AllianceBattle {
    string Uuid = 1;
    string UserId = 2;
    string ServerId = 3;
    string UserName = 4;
    string Avatar = 5;
    string TargetName = 6;
    int32 X = 7;
    int32 Y = 8;
    int32 TargetX = 9;
    int32 TargetY = 10;
    int32 Status = 11;
    int64 Power = 12;
    int32 Member = 13;
    int32 MemberLimit = 14;
    int64 FinishAt = 15;
    int64 CreatedAt = 16;
    int32 Category = 17;
    string AttackAllianceId = 18;
    string DefendUserId = 19;
    string DefendServerId = 20;
    string DefendAllianceId = 21;
    int32 MaxRally = 22;
    string TargetAvatar = 23;
    int32 TargetId = 24;
    int32 DesCategory = 25;
    int64 RallyTill = 26;
    bool BreakProtection = 27;
    repeated UserPublicInfo GarrisonMembers = 28;
    string OwnerMissionId = 29;
    repeated DressUpUsing TargetDressUpUsing = 30;
    repeated DressUpUsing AttackerDressUpUsing = 31;
}
    
message AllianceBattleLog {
    int32 Category = 1;
    bool IsWin = 2;
    string Attacker = 3;
    string AttackerAlliance = 4;
    string Defender = 5;
    string DefenderAlliance = 6;
    int64 CreatedAt = 7;
    int32 PlunderRes = 8;
}
    
message AllianceBattleMission {
    string Uuid = 1;
    string UserId = 2;
    string ServerId = 3;
    string AllianceBattleId = 4;
    int32 Status = 5;
    int64 CreatedAt = 6;
    int64 FinishAt = 7;
    int64 Power = 8;
    string Name = 9;
    string Avatar = 10;
    repeated Army Armies = 11;
    int64 SpeedChangeAt = 12;
    int32 Duration = 13;
    repeated GiantBeast Beasts = 14;
    repeated DressUpUsing DressUpUsing = 15;
}
    
message AllianceBattleCreated {
    repeated AllianceBattleCreateInfo Battles = 1;
}
    
message AllianceBattleAssistLimitParams {
    string ServerId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message AllianceBattleAssistLimitRsp {
    int32 Max = 1;
    int32 Used = 2;
}
    
message AllianceGarrisonsInfoParams {
    int32 PosNum = 1;
}
    
message AllianceGarrisonsInfoRsp {
    int32 MaxAssist = 1;
    repeated AllianceGarrisonInfo Garrisons = 2;
}
    
message AllianceAskArmyAssistParams {
    string WarningId = 1;
}
    
message AllianceBattleSpeedUp {
    AllianceBattleMission Mission = 1;
    string BattleId = 2;
    int64 BattleFinishAt = 3;
}
    
message AllianceBattleInfoParams {
    string BattleId = 1;
}
    
message AllianceBattleInfoRsp {
    AllianceBattle Battle = 1;
    repeated AllianceBattleMission Missions = 2;
}
    
message AllianceAssistSimpleLog {
    string UserId = 1;
    int32 ArmyAmount = 2;
    int64 Time = 3;
}
    
message AllianceAssistLog {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    int32 ArmyAmount = 4;
    int64 Time = 5;
    repeated DressUpUsing DressUpUsing = 6;
}
    
message AllianceAssistLogsParams {
    int32 Start = 1;
    int32 End = 2;
}
    
message AllianceAssistLogsRsp {
    repeated AllianceAssistLog Logs = 1;
}
    
message AllianceGarrisonInfo {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    MissionTeam Team = 4;
    repeated DressUpUsing DressUpUsing = 5;
}
    
message RemovalAssistParams {
    string UserId = 1;
    string EventId = 2;
}
    
message AllianceBattleNums {
    repeated string Attack = 1;
    repeated string Defence = 2;
}
    
message AllianceBuildingsInfoParams {
    string AllianceId = 1;
}
    
message AllianceBuildingsInfoRsp {
    repeated AllianceBuildingBriefInfo Fortresses = 1;
}
    
message AllianceFortressInfoParams {
    int32 PosX = 1;
    int32 PosY = 2;
}
    
message AllianceFortressInfoRsp {
    AllianceBuilding Building = 1;
}
    
message AllianceBuildingRenameParams {
    repeated RenameInfo RenameList = 1;
}
    
message AllianceBuildingCreateParams {
    int32 ConfId = 1;
    int32 PosX = 2;
    int32 PosY = 3;
}
    
message AllianceBuildingDestroyParams {
    int32 ConfId = 1;
}
    
message AllianceMineInfo {
    int32 MineId = 1;
    string AllianceId = 2;
    int32 MaxAmount = 3;
    int32 RemainAmount = 4;
    int32 MineSpeed = 5;
    int64 MineAt = 6;
    int64 FinishAt = 7;
    int32 MaxMember = 8;
    int32 Member = 9;
}
    
message AllianceMineFinishParams {
    string AllianceId = 1;
    int32 MineId = 2;
}
    
message AllianceFortressRecoverParams {
    int32 ConfId = 1;
}
    
message GarrisonInfo {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    repeated Army Armies = 4;
    repeated GiantBeast Beasts = 5;
    repeated DressUpUsing DressUpUsing = 6;
}
    
message AllianceGarrisonEvent {
    string AllianceId = 1;
    int32 Building = 2;
    repeated Army Armies = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    int32 Duration = 6;
}
    
message AllianceFortressListParams {
    string AllianceId = 1;
}
    
message AllianceFortressListRsp {
    repeated AllianceFortressBriefInfo Fortresses = 1;
}
    
message AllianceBuilding {
    int32 ConfId = 1;
    int32 Category = 2;
    string Name = 3;
    int32 State = 4;
    int32 ArchiValue = 5;
    int64 ChangeTime = 6;
    repeated GarrisonInfo Garrison = 7;
    int32 GarrisonMax = 8;
    float OperationSpeedPerSec = 9;
    int32 Pos = 10;
    int32 RebuildReason = 11;
    string AllianceName = 12;
    bool BuildFinish = 13;
    int32 AllianceAvatar = 14;
}
    
message AllianceDomain {
    string AllianceId = 1;
    int32 Id = 2;
    int32 Occupied = 3;
    int64 CreateTime = 4;
    string Candidates = 5;
}
    
message GetNearbyBuildPlaceParams {
    int32 ConfId = 1;
}
    
message GetNearbyBuildPlaceRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message RemovalGarrisonParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
}
    
message AllianceBuildingMapInfoParams {
    string AllianceId = 1;
    int32 ConfId = 2;
}
    
message AllianceBuildingMapInfoRsp {
    string AllianceName = 1;
    string BuildingName = 2;
}
    
message AllianceDailyInfoParams {
    string AllianceId = 1;
}
    
message AllianceDailyInfoRsp {
    int32 ActiveCount = 1;
    int32 ContributionCount = 2;
    repeated int32 ClaimedActive = 3;
    repeated int32 ClaimedContribution = 4;
}
    
message AllianceDailyClaimParams {
    int32 TaskConfId = 1;
}
    
message AllianceDailyClaimRsp {
    repeated Reward Rewards = 1;
    repeated int32 ClaimedActive = 2;
    repeated int32 ClaimedContribution = 3;
}
    
message AllianceTasksStartRsp {
    AllianceTask Task = 1;
    int64 NextFreeAt = 2;
}
    
message AllianceDailyUpdateInfo {
    
}
    
message AlliancePresientTaskInfoParams {
    
}
    
message AlliancePresidentTasks {
    repeated AlliancePresidentTask Tasks = 1;
}
    
message AlliancePresidentTask {
    int32 ConfId = 1;
    int32 Status = 2;
}
    
message AlliancePresientTaskClaimParams {
    int32 ConfId = 1;
}
    
message AlliancePresientTaskClaimRsp {
    repeated Reward Rewards = 1;
}
    
message AlliancePresientTaskMarkRenameParams {
    
}
    
message AllianceDailyClaimAllParams {
    
}
    
message AllianceDailyClaimAllRsp {
    repeated Reward Rewards = 1;
    repeated int32 ClaimedActive = 2;
    repeated int32 ClaimedContribution = 3;
}
    
message AllianceRequestGetGiftParams {
    string AllianceId = 1;
    string ItemId = 2;
}
    
message AllianceRequestGiftInfoParams {
    string AllianceId = 1;
}
    
message AllianceRequestGiftInfoRsp {
    AllianceGift GiftInfo = 1;
    repeated AllianceItem Gifts = 2;
}
    
message AllianceHelpInfosParams {
    string AllianceId = 1;
}
    
message AllianceHelpInfosRsp {
    repeated AllianceHelp Helps = 1;
}
    
message AllianceHelpSingleParams {
    string AllianceId = 1;
    string AllianceHelpId = 2;
}
    
message AllianceHelpAllParams {
    string AllianceId = 1;
}
    
message AllianceHelpAskHelpParams {
    int32 Category = 1;
    string EventId = 2;
}
    
message AllianceHelp {
    string Uuid = 1;
    string UserId = 2;
    string Name = 3;
    string Avatar = 4;
    int32 HelpLimit = 5;
    int32 Helped = 6;
    int32 Category = 7;
    int32 ConfId = 8;
    int32 Level = 9;
    string EventId = 10;
    int64 FinishAt = 11;
    repeated DressUpUsing DressUpUsing = 12;
}
    
message AllianceHelpOnHelp {
    string Helper = 1;
    AllianceHelp Help = 2;
    string HelperAvatar = 3;
}
    
message AllianceHospitalInfoParams {
    string AllianceId = 1;
}
    
message AllianceHospitalInfoRsp {
    repeated InjuredAlly InjuredAllies = 1;
}
    
message InjuredAlly {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    repeated Army Armies = 4;
}
    
message AllianceHospitalMyInfoParams {
    string AllianceId = 1;
}
    
message AllianceHospitalMyInfoRsp {
    InjuredAlly InjuredAlly = 1;
}
    
message AllianceHospitalCureParams {
    repeated Army Armies = 1;
    bool Instant = 2;
}
    
message AllianceRequestMessageListParams {
    string AllianceId = 1;
    int64 Index = 2;
}
    
message AllianceRequestMessageListRsp {
    repeated MessageItem MessageList = 1;
}
    
message AllianceRequestSendMessageParams {
    MessageItem Message = 1;
}
    
message AllianceRequestDeleteMessageParams {
    string Uuid = 1;
}
    
message AllianceRequestBanListParams {
    string AllianceId = 1;
}
    
message AllianceRequestBanListRsp {
    repeated BanPlayerItem BanList = 1;
    repeated BanAllianceItem AllianceBanList = 2;
}
    
message AllianceRequestBanPlayerParams {
    string PlayerId = 1;
}
    
message AllianceRquestReleasePlayerParams {
    string PlayerId = 1;
}
    
message RequestBanAllianceParams {
    string AllianceId = 1;
}
    
message RquestReleaseAllianceParams {
    string AllianceId = 1;
}
    
message MessageItem {
    string SelfAllianceId = 1;
    string Alliance = 2;
    string AllianceId = 3;
    string SenderId = 4;
    string Sender = 5;
    int64 MessageId = 6;
    string Content = 7;
    int64 CreatedAt = 8;
    string Avatar = 9;
    string Uuid = 10;
    int32 AllianceAvatar = 11;
    int32 VipLevel = 12;
    bool VipActive = 13;
    repeated DressUpUsing DressUpUsing = 14;
}
    
message AllianceMessageMarkReadParams {
    int64 MessageId = 1;
}
    
message MessageItemDelete {
    string Uuid = 1;
    int64 MessageId = 2;
}
    
message AllianceResAssistInfoParam {
    string AssistedPlayer = 1;
}
    
message AllianceResAssistInfoRsp {
    repeated ResAmount SelfResource = 1;
    int32 Tax = 2;
    int32 Load = 3;
    int32 Duration = 4;
    UserPublicInfo PlayerInfo = 5;
}
    
message AllianceResAssistParam {
    string AssistedPlayer = 1;
    repeated ResAmount CostResource = 2;
}
    
message AllianceResAssistMission {
    string Uuid = 1;
    string AssistingPlayer = 2;
    string AssistedPlayer = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    repeated ResAmount GetResource = 6;
    repeated ResAmount CostResource = 7;
    string AllianceId = 8;
    string AllianceName = 9;
    bool Fail = 10;
}
    
message AllianceAskForResAssistParam {
    string AllianceId = 1;
    int32 NeedResourceId = 2;
}
    
message AllianceResAssistCoolDownParam {
    
}
    
message AllianceResAssistCoolDownRsp {
    bool Cooldown = 1;
}
    
message AllianceShopInfoParams {
    string AllianceId = 1;
}
    
message AllianceShopInfoRsp {
    repeated AllianceShopItem Items = 1;
    int64 Honor = 2;
}
    
message AllianceShopStockParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message AllianceShopStockRsp {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message AllianceShopMarkParams {
    int32 ConfId = 1;
}
    
message AllianceShopMarkRsp {
    int32 ConfId = 1;
    int32 Mark = 2;
}
    
message AllianceShopBuyParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message AllianceShopBuyRsp {
    int32 ConfId = 1;
    int32 Amount = 2;
    int32 Honor = 3;
}
    
message AllianceShopLogParams {
    int32 Category = 1;
}
    
message AllianceShopLogRsp {
    repeated AllianceShopLog Logs = 1;
}
    
message AllianceHonor {
    int64 Amount = 1;
}
    
message AllianceStorehouseInfoParams {
    int32 ConfId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message AllianceStorehouseInfoRsp {
    AllianceBuilding Building = 1;
    int64 GoodsMax = 2;
    int32 StoreMemberNum = 3;
    repeated StoreGoodsInfo Goods = 4;
}
    
message AllianceStorehouseInitParam {
    int32 ConfId = 1;
}
    
message AllianceStorehouseInitRsp {
    repeated ResAmount SelfResource = 1;
    repeated ResAmount StoredResource = 2;
    int32 TodayStore = 3;
    int32 TodayMax = 4;
    int64 TotalStore = 5;
    int64 TotalMax = 6;
    int32 Duration = 7;
}
    
message AllianceResStoreParam {
    int32 ConfId = 1;
    repeated ResAmount CostResource = 2;
}
    
message AllianceResFetchParam {
    int32 ConfId = 1;
    repeated ResAmount Resource = 2;
}
    
message StoreGoodsInfo {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    int64 Load = 4;
    repeated ResAmount StoreGoods = 5;
    repeated DressUpUsing DressUpUsing = 6;
}
    
message AllianceTasksStartParams {
    string TaskId = 1;
}
    
message AllianceTasksAskHelpParams {
    string TaskId = 1;
}
    
message AllianceTasksHelpParams {
    string TaskOwnerId = 1;
    string TaskId = 2;
}
    
message AllianceTasksRefreshParams {
    string AllianceId = 1;
}
    
message AllianceTasksInfosRsp {
    repeated AllianceTask Tasks = 1;
    AllianceTaskTimes AllianceTaskTimes = 2;
    int64 NextFreeAt = 3;
    int64 NextRefreshTime = 4;
}
    
message AllianceTasksFinishParams {
    string TaskId = 1;
}
    
message AllianceTasksSharedParams {
    string AllianceId = 1;
}
    
message AllianceTasksSharedRsp {
    repeated AllianceTask Tasks = 1;
}
    
message AllianceTasksHelpRsp {
    AllianceTask Task = 1;
}
    
message AllianceTasksClaimParams {
    string TaskId = 1;
}
    
message AllianceTasksSpeedupParams {
    string TaskId = 1;
}
    
message AllianceTask {
    string Id = 1;
    string UserId = 2;
    int32 Status = 3;
    int32 ConfId = 4;
    repeated Reward Rewards = 5;
    string HelperId = 6;
    int64 ExpireAt = 7;
    int64 FinishAt = 8;
    string Avatar = 9;
    string UserName = 10;
    string HelperName = 11;
    int64 StartAt = 12;
    bool AskedHelp = 13;
    repeated Reward HelpRewards = 14;
    repeated DressUpUsing DressUpUsing = 15;
}
    
message AllianceTaskTimes {
    int32 RefreshTimes = 1;
    int32 RemainAcceptTimes = 2;
    int32 RemainHelpTimes = 3;
}
    
message AllianceTasks {
    repeated AllianceTask AllianceTasks = 1;
}
    
message ShareAllianceTaskAssist {
    AllianceTask Task = 1;
}
    
message AllianceTechsParams {
    string AllianceId = 1;
}
    
message AllianceTechsRsp {
    int32 TotalLevel = 1;
    repeated AllianceTech Techs = 2;
}
    
message AllianceTechInfoParams {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechInfoRsp {
    AllianceTech Info = 1;
    repeated AllianceTechContriCost Costs = 2;
    int64 CoolTime = 3;
    bool IsCooling = 4;
    bool CanPurchaseCool = 5;
}
    
message AllianceContributeParams {
    string AllianceId = 1;
    string TechId = 2;
    string Cost = 3;
}
    
message AllianceContributeRsp {
    AllianceTech Info = 1;
    repeated AllianceTechContriCost NextCosts = 2;
    int64 CoolTime = 3;
    bool IsCooling = 4;
}
    
message AllianceTechResearchParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechResearchFinishParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechRecommendParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechUnrecommendParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechContriRankParam {
    string AllianceId = 1;
    int32 Category = 2;
    int32 Offset = 3;
    int32 Limit = 4;
}
    
message AllianceTechContriRankRsp {
    int32 Category = 1;
    int32 Offset = 2;
    int64 RefreshTime = 3;
    repeated AllianceTechUserRankInfo RankInfos = 4;
}
    
message AllianceTechResearchRsp {
    string TechId = 1;
    int64 StartAt = 2;
    int64 EndAt = 3;
}
    
message AllianceTechBrief {
    string UuId = 1;
    int32 ConfId = 2;
    string Name = 3;
    int32 Level = 4;
    int32 Stage = 5;
    bool Unlocked = 6;
    int32 ContriProgress = 7;
    int32 ContriMax = 8;
    bool IsRecommended = 9;
    bool IsUp = 10;
    int64 ResearchStartAt = 11;
    int64 ResearchEndAt = 12;
}
    
message AllianceTech {
    string UuId = 1;
    int32 ConfId = 2;
    string Name = 3;
    int32 Level = 4;
    bool Unlocked = 5;
    int32 Stage = 6;
    int32 ContriProgress = 7;
    int32 ContriMax = 8;
    repeated int32 CurrentBuffId = 9;
    int32 CurrentBuffEffect = 10;
    int32 NextBuffEffect = 11;
    bool IsRecommended = 12;
    bool IsUp = 13;
    int64 ResearchStartAt = 14;
    int64 ResearchEndAt = 15;
}
    
message AllianceTechContriCost {
    string Id = 1;
    int32 Times = 2;
    Item Cost = 3;
}
    
message AllianceTechMutilContributeParams {
    string TechId = 1;
    bool GemContri = 2;
}
    
message AllianceTechMutilContributeRsp {
    AllianceTech Tech = 1;
    int64 CoolTime = 2;
    bool IsCooling = 3;
    int32 AddHonor = 4;
    int32 AddProgress = 5;
}
    
message AllianceTechBuyContriCoolTimeParams {
    
}
    
message AllianceTechContriCoolDown {
    
}
    
message AllianceTechUserRankInfo {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    int64 Honor = 4;
    int32 RankPos = 5;
    int64 Score = 6;
    repeated DressUpUsing DressUpUsing = 7;
    string AllianceName = 8;
}
    
message AllianceRequestVoteListParams {
    string AllianceId = 1;
}
    
message AllianceRequestVoteListRsp {
    repeated AllianceVoteItem VoteList = 1;
    repeated AllianceVoteMemberInfo MemberList = 2;
}
    
message AllianceInitiateVoteParams {
    AllianceVoteItem Vote = 1;
    repeated AllianceVoteMember Member = 2;
}
    
message AllianceInitiateVoteRsp {
    string Success = 1;
}
    
message AllianceVoteParams {
    AllianceVoteMember Vote = 1;
}
    
message AllianceVoteRsp {
    string Success = 1;
}
    
message AllianceDeleteVoteParams {
    repeated string DeleteList = 1;
}
    
message AllianceDeleteVoteRsp {
    string Success = 1;
}
    
message AllianceRequestVoteByIdParams {
    string VoteId = 1;
}
    
message AllianceRequestVoteByIdRsp {
    AllianceVoteItem Vote = 1;
    repeated AllianceVoteMemberInfo Members = 2;
}
    
message AllianceVoteExpired {
    string Uuid = 1;
}
    
message AllianceVoteStarted {
    string Uuid = 1;
}
    
message AllianceVoteFinished {
    string Uuid = 1;
}
    
message RefreshBattleCandidateParams {
    
}
    
message RefreshBattleCandidateRsp {
    int32 RefreshFreeTimes = 1;
    int32 RefreshBoughtTimes = 2;
    int64 RefreshFreeExpireAt = 3;
    repeated int32 PriedRanks = 4;
    repeated ArenaBattleCandidateInfo Candidates = 5;
}
    
message GetArenaBattlePageInfoParam {
    
}
    
message GetArenaBattlePageInfoRsp {
    int32 Rank = 1;
    int32 DayBattleiFreeTimes = 2;
    int32 WeekPriedFreeTimes = 3;
    int32 RefreshFreeTimes = 4;
    int32 RefreshBoughtTimes = 5;
    int64 RefreshFreeExpireAt = 6;
    repeated int32 PriedRanks = 7;
    int64 BattleEndAt = 8;
    repeated ArenaBattleCandidateInfo Candidates = 9;
}
    
message ArenaBattleParam {
    repeated Army Armies = 1;
    int32 BeastId = 2;
    string BattleId = 3;
    int32 BattleRank = 4;
}
    
message ArenaBattleRsp {
    bool IsWin = 1;
    ArenaPlayerInfo AttackerInfo = 2;
    ArenaPlayerInfo DefenderInfo = 3;
    string MailId = 4;
    bool RankIsChange = 5;
}
    
message ArenaTroopInfoParam {
    int32 Rank = 1;
}
    
message ArenaTroopInfoRsp {
    repeated Army Armies = 1;
    repeated GiantBeast Beasts = 2;
    repeated PublicEquipSlotInfo Equips = 3;
    ArenaBattleCandidateInfo Candidate = 4;
    int32 WeekPriedFreeTimes = 5;
}
    
message ArenaRankPageInfoParam {
    int32 Count = 1;
}
    
message ArenaRankPageInfoRsp {
    repeated ArenaRankPlayerInfo List = 1;
    int32 Rank = 2;
}
    
message ArenaRankPlayerInfoParam {
    int32 Start = 1;
    int32 Count = 2;
}
    
message ArenaRankPlayerInfoRsp {
    repeated ArenaRankPlayerInfo List = 1;
}
    
message ArenaAwardPageInfoParam {
    
}
    
message ArenaAwardPageInfoRsp {
    ArenaRankPlayerInfo PlayerRankInfo = 1;
    int32 TroopInfoPriedTimes = 2;
    int64 AwardAt = 3;
    bool GotAward = 4;
    int32 WinStreakTimes = 5;
    repeated ArenaWinStreakOrTerminateRecord WinStreakOrTerminateList = 6;
    repeated ArenaBattleResultRecord BattleResultList = 7;
}
    
message ArenaGetAwardsParam {
    
}
    
message ArenaGetAwardsRsp {
    repeated Reward Rewards = 1;
}
    
message ArenaBattleCandidateInfo {
    ArenaRankPlayerInfo PlayerRankInfo = 1;
    int64 PlayerPower = 2;
}
    
message ArenaRankPlayerInfo {
    string AllianceId = 1;
    string AllianceName = 2;
    string AllianceShort = 3;
    string Avatar = 4;
    int32 Bust = 5;
    string PlayerId = 6;
    string PlayerName = 7;
    int32 Rank = 8;
    bool IsRobot = 9;
    repeated DressUpUsing DressUpUsing = 10;
}
    
message ArenaPlayerInfo {
    string AllianceId = 1;
    string AllianceName = 2;
    string AllianceShort = 3;
    string Name = 4;
    string Avatar = 5;
    int32 Bust = 6;
    string PlayerId = 7;
    bool IsRobot = 8;
    repeated DressUpUsing DressUpUsing = 9;
}
    
message ArenaWinStreakOrTerminateRecord {
    int32 RecordType = 1;
    ArenaPlayerInfo Attacker = 2;
    ArenaPlayerInfo Defender = 3;
    int32 Times = 4;
}
    
message ArenaBattleResultRecord {
    int32 RecordType = 1;
    ArenaPlayerInfo AttackerOrDefender = 2;
    bool IsWin = 3;
    int64 CreateAt = 4;
    string ReportMailId = 5;
    int32 Rank = 6;
}
    
message ArenaBattleTroopInfo {
    string PlayerId = 1;
    repeated PublicEquipSlotInfo Equips = 2;
    repeated Army Armies = 3;
    repeated GiantBeast Beasts = 4;
    repeated Buff Buffers = 5;
}
    
message ArenaAttackParams {
    repeated Army Armies = 1;
    GiantBeast BeastInfo = 2;
}
    
message ActivityArenaInfo {
    int64 StartAt = 1;
    int64 BattleDur = 2;
    int64 AwardsDur = 3;
}
    
message ArenaPlayerDayData {
    int32 BattleTimesFree = 1;
    int32 RefreshCandidateTimesFree = 2;
    int32 RefreshCandidateTimesBought = 3;
    repeated int32 PriedSet = 4;
    int64 ExpireAt = 5;
}
    
message ArenaPlayerWeekData {
    int32 PryTroopInfoFreeTimes = 1;
    int64 ExpireAt = 2;
}
    
message ArmyTrainParams {
    int32 ConfId = 1;
    int32 Amount = 2;
    bool Instant = 3;
}
    
message ArmyTrainRsp {
    TrainEvent Event = 1;
    repeated ResAmount ResAmounts = 2;
}
    
message ArmyBuyTrainRsp {
    int32 Gem = 1;
    repeated ResAmount ResAmounts = 2;
    Army Army = 3;
}
    
message ArmyCollectParams {
    string EventId = 1;
}
    
message ArmyCollectRsp {
    string EventId = 1;
    Army Army = 2;
}
    
message ArmyCureParams {
    repeated Army Armies = 1;
    bool Instant = 2;
}
    
message ArmyCureRsp {
    CureEvent Event = 1;
    repeated ResAmount ResAmounts = 2;
}
    
message ArmyBuyCureRsp {
    repeated Army Armies = 1;
    repeated ResAmount ResAmounts = 2;
    int32 Gem = 3;
}
    
message ArmyDeleteParams {
    repeated Army Armies = 1;
}
    
message ArmyInfos {
    repeated Army Armies = 1;
}
    
message InjuredArmy {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message InjuredArmies {
    repeated InjuredArmy InjuredArmies = 1;
}
    
message ArmyTrainFinishRsp {
    string EventId = 1;
    int32 ArmyId = 2;
    int32 ArmyAmount = 3;
}
    
message ArmyFinishCureRsp {
    string EventId = 1;
    repeated Army Armies = 2;
}
    
message TrainEvent {
    string Uuid = 1;
    string UserId = 2;
    int32 ConfId = 3;
    int32 Amount = 4;
    int64 CreatedAt = 5;
    int64 FinishAt = 6;
    int32 Duration = 7;
    int32 BuildingId = 8;
    repeated Item UsedItems = 9;
    repeated ResAmount UsedRes = 10;
}
    
message CureEvent {
    string Uuid = 1;
    string UserId = 2;
    repeated Army Armies = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    int32 Duration = 6;
    bool AskedHelp = 7;
    string HelpId = 8;
    bool IsAlliance = 9;
    repeated Item UsedItems = 10;
    repeated ResAmount UsedRes = 11;
}
    
message Army {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message Formation {
    int32 FormId = 1;
    string FormName = 2;
    repeated Army Armies = 3;
    repeated int32 Beasts = 4;
}
    
message ArmyFormationParams {
    repeated Formation Armies = 1;
}
    
message ArmyDeleteInjuredParams {
    repeated Army Armies = 1;
}
    
message ArmyFormationNameModifyParams {
    int32 FormId = 1;
    string FormName = 2;
}
    
message ArmyUpgradeParams {
    int32 SourceConfId = 1;
    int32 TargetConfId = 2;
    int32 Amount = 3;
    bool Instant = 4;
}
    
message TempInfo {
    
}
    
message GetBeautiesInfoParams {
    
}
    
message GetBeautiesInfoRsp {
    repeated BeautyInfo Infos = 1;
    int32 Rose = 2;
    int32 BeautyInGame = 3;
    int32 GameExcept = 4;
    int64 ChangeCostumeCoolAt = 5;
    bool CanDate = 6;
}
    
message BeautyDateParams {
    int32 Id = 1;
}
    
message BeautyGameStartParams {
    int32 Id = 1;
    bool Hyper = 2;
}
    
message BeautyGameStartRsp {
    int32 Except = 1;
}
    
message BeautyPlayGameParams {
    int32 Id = 1;
    int32 Selection = 2;
}
    
message BeautyPlayGameRsp {
    bool Win = 1;
    int32 AddExp = 2;
    int32 BeautyId = 3;
    int32 WinStream = 4;
}
    
message BeautyStarUpParams {
    int32 Id = 1;
}
    
message BeautySkillUpParams {
    int32 BeautyId = 1;
    int32 SkillId = 2;
}
    
message BeautyGiftParams {
    int32 BeautyId = 1;
    int32 GiftPos = 2;
    int32 GiftId = 3;
}
    
message BeautyChangeCostumeParams {
    int32 BeautyId = 1;
    int32 Costume = 2;
}
    
message BeautyInfo {
    int32 Id = 1;
    string Name = 2;
    bool Unlocked = 3;
    int32 Exp = 4;
    bool ExpMax = 5;
    repeated BeautySkill Skills = 6;
    int32 Stars = 7;
    int32 NameChangeTimes = 8;
    repeated bool Gifts = 9;
    int32 Costume = 10;
    int32 UnlockCondition = 11;
    int32 TotalExp = 12;
    repeated int32 OwnCostumes = 13;
    bool CanDate = 14;
}
    
message BeautyChangeNameParams {
    int32 BeautyId = 1;
    string Name = 2;
}
    
message PurchaseCostumeCoolParams {
    
}
    
message BeautyOnlineBonusInfoParams {
    
}
    
message BeautyOnlineBonusInfoRsp {
    int32 Index = 1;
    int64 AvaliableAt = 2;
    BeautyInfo BeautyInfo = 3;
}
    
message GetBeautyOnlineBonusParams {
    int32 Index = 1;
}
    
message GetBeautyOnlineBonusRsp {
    int32 NextIndex = 1;
    int64 NextAvaliableAt = 2;
}
    
message BeautyOnlineBonusAvaliable {
    int32 Index = 1;
}
    
message BeautyOnlineBonusUnlock {
    
}
    
message BeautyOnlineBonus {
    int32 BeautyOnlineBonusIndex = 1;
    int32 BonusStatus = 2;
    int64 StartAt = 3;
    int64 AvaliableAt = 4;
}
    
message BeautyDateRsp {
    repeated Item Rewards = 1;
}
    
message BeautyCostumeUnlock {
    int32 Beauty = 1;
    int32 Costume = 2;
}
    
message BeautySkillUnlock {
    int32 Beauty = 1;
    int32 Skill = 2;
}
    
message BeautyChangeCostumeRsp {
    int64 CoolAt = 1;
}
    
message BookmarkAddParams {
    int32 Category = 1;
    string Name = 2;
    int32 X = 3;
    int32 Y = 4;
}
    
message BookmarkEditParams {
    int32 BookmarkId = 1;
    int32 Category = 2;
    string Name = 3;
}
    
message BookmarkDelParams {
    repeated int32 BookmarkIds = 1;
}
    
message Bookmark {
    int32 Id = 1;
    int32 Category = 2;
    string Name = 3;
    int32 X = 4;
    int32 Y = 5;
    int64 CreatedAt = 6;
    int32 RecCategory = 7;
    int32 RecConfId = 8;
}
    
message BookmarkShareParams {
    int32 Channel = 1;
    int32 Category = 2;
    int32 ConfId = 3;
    int32 X = 4;
    int32 Y = 5;
}
    
message BookmarkAddAllianceParams {
    int32 Category = 1;
    string Name = 2;
    int32 X = 3;
    int32 Y = 4;
}
    
message BookmarkDelAllianceParams {
    int32 Category = 1;
}
    
message AllianceBookmark {
    int32 Category = 1;
    string Name = 2;
    int32 X = 3;
    int32 Y = 4;
    int64 CreatedAt = 5;
}
    
message AllianceBookmarks {
    repeated AllianceBookmark AllianceBookmarks = 1;
}
    
message BotUpgradeBuildingParams {
    int32 Level = 1;
}
    
message BuildingCreateParams {
    int32 Pos = 1;
    int32 ConfId = 2;
    bool Instant = 3;
}
    
message BuildingCreateRsp {
    repeated ResAmount ResAmounts = 1;
    UpgradeEvent Event = 2;
    Building Building = 3;
}
    
message UpgradeEvent {
    string Uuid = 1;
    string UserId = 2;
    int32 Category = 3;
    int32 TargetId = 4;
    int32 UpgradeTo = 5;
    int64 CreatedAt = 6;
    int64 FinishAt = 7;
    int32 Duration = 8;
    bool AskedHelp = 9;
    string HelpId = 10;
    repeated Item UsedItems = 11;
    repeated ResAmount UsedRes = 12;
}
    
message BuildingUpgradeParams {
    int32 BuildingId = 1;
    bool Instant = 2;
}
    
message BuildingUpgradeRsp {
    repeated ResAmount ResAmounts = 1;
    UpgradeEvent Event = 2;
}
    
message BuildingBuyUpgradeRsp {
    int32 Gem = 1;
    repeated ResAmount ResAmounts = 2;
    Building Building = 3;
}
    
message BuildingDestroyParams {
    int32 BuildingId = 1;
}
    
message BuildingDestroyRsp {
    UpgradeEvent Event = 1;
}
    
message BuildingMoveParams {
    int32 FromPos = 1;
    int32 ToPos = 2;
}
    
message BuildingBuyBuilderParams {
    bool UseGem = 1;
    int32 Amount = 2;
}
    
message BuildingBuyBuilderRsp {
    int32 BuilderIdx = 1;
    int32 ExpireAt = 2;
}
    
message BuildingFinishRsp {
    string EventId = 1;
    int32 BuildingId = 2;
    int32 BuildingLevel = 3;
}
    
message BuildingFinishDestroyRsp {
    string EventId = 1;
    int32 BuildingId = 2;
}
    
message Builder {
    bool IsWorking = 1;
    int32 EventId = 2;
    int32 ExpireAt = 3;
}
    
message BuildingUnlockAreaParams {
    int32 ConfId = 1;
}
    
message BuildingCenterGift {
    int32 Level = 1;
}
    
message GetCenterUpgradeGiftParams {
    int32 Level = 1;
}
    
message HyperGamblingInfo {
    int32 RewardId = 1;
    int32 ConfigIndex = 2;
    int32 Order = 3;
    int32 Category = 4;
    int32 Amount = 5;
    int32 Card = 6;
    int32 ShowIndex = 7;
}
    
message HyperGamblingRewardInfo {
    int32 Category = 1;
    int32 RewardId = 2;
    int32 Order = 3;
    int32 BonusTimes = 4;
    int32 Amount = 5;
    int32 ConfigIndex = 6;
    int32 ShowIndex = 7;
    int32 Card = 8;
}
    
message GetCasinoInfoParams {
    
}
    
message CasinoInfoRsp {
    bool Free = 1;
    int32 Counts = 2;
    int32 HyperCounts = 3;
    repeated HyperGamblingInfo HyperGamblingInfo = 4;
    int64 NextFreeAt = 5;
    int32 RewardPoolId = 6;
}
    
message GambleParams {
    
}
    
message GambleRsp {
    Reward Reward = 1;
    repeated HyperGamblingInfo HyperGamblingInfo = 2;
    int32 RewardPoolId = 3;
}
    
message HyperGambleParams {
    int32 Index = 1;
}
    
message HyperGambleRsp {
    HyperGamblingRewardInfo Reward = 1;
}
    
message QuitHyperGambleParams {
    
}
    
message ShareHyperGambleParams {
    int32 Category = 1;
}
    
message CasinoNoticeInfo {
    string PlayerName = 1;
    int32 RewardId = 2;
    int32 Amount = 3;
    string HyperInfoParam = 4;
}
    
message GetCasinoNoticeParams {
    
}
    
message CasinoNoticeRsp {
    repeated NotifyInfo NoticeList = 1;
}
    
message GetCasinoActivityAwardParams {
    int32 Id = 1;
}
    
message AccomplishedPlotTask {
    int32 Id = 1;
    bool AwardTaken = 2;
}
    
message AccomplishedPlotTasks {
    repeated AccomplishedPlotTask Tasks = 1;
}
    
message UnlockedPlotTask {
    int32 Id = 1;
    int32 CurrentProcess = 2;
}
    
message UnlockedPlotTasks {
    repeated UnlockedPlotTask Tasks = 1;
}
    
message GetChapterInfoParams {
    
}
    
message GetChapterInfoRsp {
    int32 CurrentChapter = 1;
    repeated UnlockedPlotTask UnlockedPlotTasks = 2;
    repeated AccomplishedPlotTask AccomplishedPlotTasks = 3;
}
    
message GetPlotTaskAwardParams {
    int32 Id = 1;
}
    
message GetChapterAwardParams {
    
}
    
message ClosePlotTasksEntry {
    
}
    
message ChapterTasksInfo {
    bool Closed = 1;
    bool RedSpot = 2;
    int32 CurrentChapter = 3;
    repeated UnlockedPlotTask UnlockedPlotTasks = 4;
    repeated AccomplishedPlotTask AccomplishedPlotTasks = 5;
}
    
message UnlockedAchievements {
    repeated UnlockedAchievement Tasks = 1;
}
    
message InvestParams {
    int32 Capital = 1;
    int32 Category = 2;
}
    
message GetInvestStatusParams {
    
}
    
message GetInvestStatusRsp {
    repeated InvestStatus Infos = 1;
}
    
message GetInvestInfoParams {
    int32 Category = 1;
}
    
message GetInvestInfoRsp {
    int32 Category = 1;
    int32 Capital = 2;
    int32 Interest = 3;
    int64 FinishAt = 4;
}
    
message InvestFinishInfo {
    int32 Category = 1;
    int32 Capital = 2;
    int32 Interest = 3;
    int32 Status = 4;
}
    
message CancelInvestParams {
    int32 Category = 1;
}
    
message GetInvestAwardParams {
    int32 Category = 1;
}
    
message GetRechargeLotteryInfoParams {
    
}
    
message GetRechargeLotteryInfoRsp {
    int32 Times = 1;
    int32 Luck = 2;
    int32 GiftpackId = 3;
    int32 RewardId = 4;
    repeated NotifyInfo Notifies = 5;
    bool CanBuy = 6;
    bool CanGetDailyBonus = 7;
}
    
message RechargeLottoParams {
    
}
    
message RechargeLottoRsp {
    bool Bonus = 1;
    int32 Luck = 2;
    int32 Times = 3;
    int32 RewardId = 4;
}
    
message GetRechargeLotteryRewardParams {
    
}
    
message GetRechargeLotteryRewardRsp {
    repeated Reward Rewards = 1;
    bool Bonus = 2;
    int32 Times = 3;
}
    
message RechargeLotteryTimesChange {
    int32 Times = 1;
}
    
message RechargeDailyBonusParams {
    
}
    
message RechargeDailyBonusRsp {
    repeated Reward Reward = 1;
}
    
message ChatParams {
    string RoomId = 1;
    string SenderId = 2;
    string Content = 3;
    int32 MType = 4;
    string Params = 5;
}
    
message ChatNotice {
    string RoomId = 1;
    string SenderId = 2;
    string Sender = 3;
    string AllianceId = 4;
    string Alliance = 5;
    int32 VipLevel = 6;
    int64 CreatedAt = 7;
    string MessageId = 8;
    string Content = 9;
    string Avatar = 10;
    int32 MType = 11;
    string Params = 12;
    bool VipActive = 13;
    bool HideVipInfo = 14;
    int32 AlliancePos = 15;
    string AllianceTitle = 16;
    bool IsGameManager = 17;
    int32 ChattingType = 18;
    repeated DressUpUsing DressUpUsing = 19;
}
    
message HistoryParams {
    string RoomId = 1;
    int64 Index = 2;
    int32 MessageNum = 3;
}
    
message HistoryParamsRsp {
    repeated ChatNotice History = 1;
}
    
message AllianceNoticeParams {
    string RoomId = 1;
    int64 Index = 2;
    int32 MessageNum = 3;
}
    
message NoticeHistoryParamsRsp {
    repeated ChatNotice History = 1;
}
    
message RequestNewestParams {
    
}
    
message RequestNewestParamsRsp {
    ChatNotice Newest = 1;
}
    
message NotifyInfo {
    int32 Category = 1;
    int32 NotifyId = 2;
    string Content = 3;
    string Params = 4;
    int32 Language = 5;
    bool IsGM = 6;
    int32 Style = 7;
}
    
message LuckyMoneyGetInfo {
    int32 Money = 1;
    string PlayerId = 2;
    UserPublicInfo PublicInfo = 3;
}
    
message LuckyMoneyInfo {
    string Uuid = 1;
    int32 Category = 2;
    int32 Money = 3;
    repeated LuckyMoneyGetInfo GetInfo = 4;
    int64 EmptyAt = 5;
}
    
message GetLuckyMoneyParams {
    string Uuid = 1;
}
    
message GetLuckyMoneyRsp {
    int32 Result = 1;
    int32 Money = 2;
}
    
message GetLuckyMoneyInfoParams {
    string Uuid = 1;
}
    
message GetLuckyMoneyInfoRsp {
    LuckyMoneyInfo Info = 1;
}
    
message AddToBlockListParams {
    string PlayerId = 1;
}
    
message RemoveFromBlockListParams {
    string PlayerId = 1;
}
    
message GetBlockListParams {
    
}
    
message GetBlockListRsp {
    repeated UserPublicInfo List = 1;
}
    
message AddToBlockListRsp {
    UserPublicInfo Info = 1;
}
    
message TranslateParams {
    int32 Category = 1;
    string Id = 2;
    repeated string Content = 3;
}
    
message TranslateRsp {
    string Id = 1;
    int32 Category = 2;
    repeated string Content = 3;
}
    
message FlushChatShareTimes {
    
}
    
message GetServerSimpleInfoParams {
    
}
    
message GetServerSimpleInfoRsp {
    ServerSimpleInfo Info = 1;
}
    
message GetServerListParams {
    
}
    
message GetServerListRsp {
    repeated string Servers = 1;
    string Current = 2;
}
    
message GetDailyTaskInfoParams {
    
}
    
message GetDailyTaskInfoRsp {
    repeated UnlockedDailyTask Unlocked = 1;
    repeated AccomplishedDailyTask Accomplished = 2;
    int32 Score = 3;
    int64 RefreshAt = 4;
    repeated AccomplishedDailyAward AccomplishedAward = 5;
    int32 BaseLevel = 6;
}
    
message GetDailyTaskAwardParams {
    int32 Id = 1;
}
    
message DailyTaskRefresh {
    int64 RefreshAt = 1;
}
    
message AccomplishedDailyTask {
    int32 Id = 1;
}
    
message AccomplishedDailyAward {
    int32 Id = 1;
    bool IsAwardTaken = 2;
}
    
message UnlockedDailyTask {
    int32 Id = 1;
    int32 Finished = 2;
}
    
message DailyTasksUnlockedOrAccomplished {
    bool Status = 1;
}
    
message DiamondFundInfos {
    repeated DiamondFundInfo DiamondFundInfos = 1;
}
    
message DiamondFundInfo {
    int32 Tier = 1;
    int64 ExpireAt = 2;
    int32 ClaimedDate = 3;
    int32 ClaimedTimes = 4;
    int32 ShowTimes = 5;
}
    
message BuyDiamondFundParams {
    int32 Tier = 1;
}
    
message BuyDiamondFundRsp {
    DiamondFundInfo DiamondFund = 1;
}
    
message ClaimDiamondFundParams {
    int32 Tier = 1;
}
    
message ClaimDiamondFundRsp {
    DiamondFundInfo DiamondFund = 1;
    repeated Reward Rewards = 2;
}
    
message DressUpUsing {
    int32 ConfId = 1;
    int32 DressType = 2;
    int32 DressUpConId = 3;
    int64 ExpireAt = 4;
}
    
message DressupHold {
    int32 ConfId = 1;
    int32 DressUpConId = 2;
    int64 ExpireAt = 3;
    int32 Amount = 4;
    bool Using = 5;
    int32 DressUpSubType = 6;
}
    
message DressupHoldWithAmount {
    DressupHold Hold = 1;
    int32 Amount = 2;
}
    
message DressUpUsingAll {
    repeated DressUpUsing Using = 1;
}
    
message DressupContanier {
    repeated DressupHold Hold = 1;
}
    
message GetDressUpTypeParams {
    int32 DressUpType = 1;
}
    
message GetDressUpTypeRsp {
    repeated DressupHold Hold = 1;
}
    
message UseDressUpParams {
    int32 ConfigId = 1;
}
    
message DressUpInfo {
    int32 ConfigId = 1;
    int32 DressUpType = 2;
    int32 DressUpSubType = 3;
    int32 DressUpConfId = 4;
    int32 Expire = 5;
    int32 Amount = 6;
    bool ImmediatelyUse = 7;
}
    
message EagleHuntInfoParams {
    
}
    
message SearchEagleParams {
    bool Guide = 1;
}
    
message EagleHuntAimTargetParams {
    int32 Index = 1;
}
    
message EagleHuntAimTargetRsp {
    int32 X = 1;
    int32 Y = 2;
    int32 ConfId = 3;
}
    
message HuntEagleParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message EagleHuntInfoRsp {
    EagleHuntInfo Info = 1;
    int64 StartTime = 2;
    int64 EndTime = 3;
}
    
message HuntHelicopter {
    int32 Id = 1;
    bool Busy = 2;
    string EventId = 3;
}
    
message HuntTechGift {
    int32 X = 1;
    int32 Y = 2;
    int32 TechId = 3;
}
    
message OneRecentRecord {
    string Uuid = 1;
    int64 CreateAt = 2;
    repeated int32 Params = 3;
    string MailId = 4;
}
    
message RecentRecordParams {
    
}
    
message RecentRecordRsp {
    repeated OneRecentRecord Records = 1;
}
    
message AllRecordParams {
    
}
    
message OneMons {
    int32 MonsId = 1;
    int32 Time = 2;
}
    
message AllRecordRsp {
    int32 TotalTime = 1;
    int32 TechRewardTime = 2;
    repeated OneMons MonsInfo = 3;
    repeated Reward AllReward = 4;
}
    
message JewelInfo {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message UpdateJewelInfos {
    repeated JewelInfo JewelList = 1;
}
    
message EquipInfo {
    string Uuid = 1;
    int32 Id = 2;
    bool IsLock = 3;
    bool IsPuton = 4;
}
    
message UpdateEquipInfo {
    repeated EquipInfo EquipList = 1;
}
    
message DelteEquip {
    repeated string EquipList = 1;
}
    
message UnlockJewelColumn {
    
}
    
message UnlockJewelColumnRsp {
    int32 Index = 1;
}
    
message JewelEvent {
    string Uuid = 1;
    string UserId = 2;
    int32 JewelId = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    int32 Duration = 6;
}
    
message JewelMakeInfo {
    JewelEvent RunEvent = 1;
    repeated int32 OverList = 2;
    repeated int32 WaitList = 3;
    int32 MaxIndex = 4;
}
    
message JewelEventFinishRsp {
    string EventId = 1;
    int32 JewelId = 2;
    int32 Amount = 3;
}
    
message DoMakeJewel {
    int32 JewelId = 1;
}
    
message DeleteWaitJewel {
    int32 Index = 1;
}
    
message CollectJewel {
    
}
    
message CollectJewelRsp {
    repeated int32 CollectList = 1;
}
    
message CompoundJewel {
    int32 JewelId = 1;
    int32 UseAmount = 2;
}
    
message CompoundJewelRsp {
    JewelInfo CompoundJewel = 1;
}
    
message ResolveJewel {
    int32 JewelId = 1;
    int32 ResolveAmount = 2;
}
    
message ResolveJewelRsp {
    JewelInfo GetJewel = 1;
}
    
message EquipEvent {
    string Uuid = 1;
    string UserId = 2;
    int32 EquipId = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    int32 Duration = 6;
    int32 UseEquipId = 7;
    repeated int32 JewelIds = 8;
}
    
message EquipEventFinishRsp {
    string EventId = 1;
    int32 EquipId = 2;
}
    
message ExchangeEquip {
    int32 EquipSerialId = 1;
    string Uuid = 2;
    repeated int32 JewelIds = 3;
    bool Instant = 4;
}
    
message ExchangeEquipRsp {
    EquipEvent Event = 1;
    bool Instant = 2;
    int32 EquipId = 3;
    string EquipUuid = 4;
}
    
message TakeExchangeEquip {
    string EventId = 1;
}
    
message TakeExchangeEquipRsp {
    string EventId = 1;
    int32 EquipId = 2;
    string EquipUuid = 3;
}
    
message CompoundEquip {
    repeated string Uuids = 1;
    int32 EquipId = 2;
}
    
message CompoundEquipRsp {
    int32 CompoundEquipId = 1;
    string EquipUuid = 2;
}
    
message ResolveEquip {
    string Uuid = 1;
}
    
message ResolveEquipRsp {
    repeated JewelInfo JewelList = 1;
}
    
message PutonEquip {
    string Uuid = 1;
}
    
message PutonEquipRsp {
    string Uuid = 1;
}
    
message PutoffEquip {
    string Uuid = 1;
}
    
message PutoffEquipRsp {
    string Uuid = 1;
}
    
message LockEquip {
    string Uuid = 1;
}
    
message LockEquipRsp {
    string Uuid = 1;
}
    
message UnlockEquip {
    string Uuid = 1;
}
    
message UnlockEquipRsp {
    string Uuid = 1;
}
    
message EquipSlotInfo {
    int32 Pos = 1;
    string EquipUuid = 2;
    int32 EquipId = 3;
}
    
message PublicEquipSlotInfo {
    int32 Pos = 1;
    int32 EquipId = 2;
}
    
message SpeedupParams {
    int32 Category = 1;
    string EventId = 2;
}
    
message SpeedupByItemParams {
    int32 Category = 1;
    string EventId = 2;
    repeated Item ItemAmounts = 3;
}
    
message SpeedupByFreeParams {
    int32 Category = 1;
    string EventId = 2;
}
    
message CancelEventParams {
    int32 Category = 1;
    string EventId = 2;
}
    
message SpeedupMissionParams {
    string EventId = 1;
    int32 ConfId = 2;
    bool BuyAndUse = 3;
    bool RallyMission = 4;
}
    
message RecallMissionParams {
    string EventId = 1;
    bool BuyAndUse = 2;
}
    
message FakeMission {
    int32 FromX = 1;
    int32 FromY = 2;
    int64 FinishAt = 3;
    int64 CreatedAt = 4;
    string Name = 5;
    string Avatar = 6;
    string UserId = 7;
}
    
message EventPanelParams {
    
}
    
message EventPanelRsp {
    bool InAlliance = 1;
    int32 AllianceContriTimes = 2;
    int64 AllianceContriCoolTime = 3;
    int32 AllianceTaskId = 4;
    int32 AllianceTaskTimes = 5;
    int64 AllianceTaskFinishTime = 6;
    int32 AllianceHelpTaskId = 7;
    int32 AllianceHelpTaskTimes = 8;
    int64 AllianceHelpTaskFinishTime = 9;
}
    
message CustomEventCreateParams {
    int32 Name = 1;
}
    
message CustomEventInfosParams {
    
}
    
message CustomEventProcessParams {
    int32 Name = 1;
}
    
message CustomEvent {
    int32 Name = 1;
    int64 CreatedAt = 2;
    int64 FinishAt = 3;
    bool Finished = 4;
    bool ClientProcessed = 5;
}
    
message CustomEvents {
    repeated CustomEvent CustomEvents = 1;
}
    
message GetFlagDayDetectInfoParams {
    
}
    
message GetFlagDayDetectInfoRsp {
    int64 RefreshAt = 1;
    repeated UnlockedFlagDayDetectTask Unlocked = 2;
    repeated AccomplishedFlagDayDetectTask Accomplished = 3;
}
    
message GetFlagDayDetectTaskAwardParams {
    int32 Id = 1;
}
    
message UnlockedFlagDayDetectTask {
    int32 Id = 1;
    int32 Process = 2;
}
    
message AccomplishedFlagDayDetectTask {
    int32 Id = 1;
    bool AwardTaken = 2;
}
    
message FlagDayDetectTaskRefresh {
    
}
    
message GetGemFundInfoParams {
    
}
    
message GetGemFundInfoRsp {
    repeated SingleGemFundInfo Infos = 1;
    int64 RefreshAt = 2;
}
    
message SingleGemFundInfo {
    bool Bought = 1;
    int32 Category = 2;
    int32 Day = 3;
    bool Taken = 4;
}
    
message GetGemFundAwardParams {
    int32 Category = 1;
}
    
message BuyGemFundParams {
    int32 Category = 1;
}
    
message GemFundRefresh {
    
}
    
message GetGiantBeastInfoParams {
    
}
    
message GetGiantBeastInfoRsp {
    repeated GiantBeast Info = 1;
    repeated BeastCureEvent Events = 2;
}
    
message GiantBeast {
    int32 Id = 1;
    int32 Level = 2;
    int32 Health = 3;
    int32 DisplayHealth = 4;
    int32 TemporaryHealth = 5;
    int32 Injured = 6;
    bool Healing = 7;
    string MissionEventId = 8;
    int32 MaxHealth = 9;
    int32 Power = 10;
}
    
message CureGiantBeastParams {
    int32 Id = 1;
    int32 HealHealth = 2;
    bool Instant = 3;
}
    
message GiantBeastBuyCureRsp {
    repeated ResAmount ResAmounts = 1;
    int32 Gem = 2;
}
    
message GiantBeastResCureRsp {
    repeated ResAmount ResAmounts = 1;
    BeastCureEvent Event = 2;
}
    
message BeastCureEvent {
    string Uuid = 1;
    int32 Category = 2;
    string UserId = 3;
    int64 CreatedAt = 4;
    int64 FinishAt = 5;
    int32 Duration = 6;
    int32 BeastId = 7;
    int32 HealHealth = 8;
    string HelpId = 9;
    bool AskedHelp = 10;
    repeated Item UsedItems = 11;
    repeated ResAmount UsedRes = 12;
}
    
message BeastFinishCureRsp {
    string EventId = 1;
    int32 BeastId = 2;
    int32 HealHealth = 3;
}
    
message BeastBrief {
    int32 Id = 1;
    int32 Level = 2;
    int32 Health = 3;
    int32 Power = 4;
}
    
message GMAddAllResParams {
    int32 Amount = 1;
}
    
message GMAddGemParams {
    int32 Amount = 1;
}
    
message GMCleanAccountParams {
    string Username = 1;
}
    
message GMAddArmiesParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message GMAddItemsParams {
    string UserId = 1;
}
    
message GMSpeedupParams {
    string UserId = 1;
    string EventId = 2;
}
    
message GMAddMailsParams {
    string UserId = 1;
}
    
message GMClearItemsParams {
    string UserId = 1;
}
    
message GMAddItemParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message GMClearMailsParams {
    string UserId = 1;
}
    
message GMWallOnFireParams {
    string UserId = 1;
}
    
message GMResetMSParams {
    string UserId = 1;
}
    
message GMAddWarningParams {
    string UserId = 1;
}
    
message GMAddAllianceActiveParams {
    int32 Amount = 1;
}
    
message GMAddAllianceContributionParams {
    int32 Amount = 1;
}
    
message GMResetAllianceDailyParams {
    string UserId = 1;
}
    
message GMAddAllianceHonorParams {
    int32 Amount = 1;
}
    
message GMSpeedupHelpTaskParams {
    string TaskId = 1;
}
    
message GMAddAllianceItemsParams {
    string UserId = 1;
}
    
message GMJoinAllianceContriRankParams {
    int32 ChangeScore = 1;
}
    
message GMAllianceTechContriMax {
    string TechId = 1;
}
    
message GMAddAllBuildingParams {
    string UserId = 1;
    int32 Level = 2;
}
    
message GMAddInjuredParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message GMBuildAllianceBuildingParams {
    int32 ConfId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message GMCompleteAllianceBuildingParams {
    int32 ConfId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message GMCompleteAllianceVoteParams {
    string AllianceId = 1;
}
    
message GMAddVipPointsParams {
    int32 Points = 1;
}
    
message GMChangeTimeParams {
    int32 Seconds = 1;
}
    
message GMGetServerTimeParams {
    
}
    
message GMChangeTimeRsp {
    int64 Time = 1;
}
    
message GMChangeVipDuration {
    int32 Seconds = 1;
}
    
message GMAddDefenceWeaponsToLimit {
    
}
    
message GMAddAllianceNewsParams {
    
}
    
message GMCleanChatParams {
    
}
    
message GMAllianceTechLevelUp {
    string TechId = 1;
    bool Max = 2;
}
    
message GMInAppPurchaseGemParams {
    int32 ConfId = 1;
}
    
message GMAddHeroExpParams {
    int64 Exp = 1;
}
    
message GMGetTileInfoParams {
    int32 Id = 1;
}
    
message GMGetTileInfoRsp {
    int32 Id = 1;
    int32 TerrainId = 2;
    int32 ConfId = 3;
}
    
message GMAddAllianceHonorScoreParams {
    int32 Amount = 1;
}
    
message GMAddAllianceMembersParams {
    int32 Amount = 1;
}
    
message GMAddAlliancePowerParams {
    int32 Amount = 1;
}
    
message GMSendNotifyParams {
    int32 Amount = 1;
}
    
message GMUnlockSkillParams {
    
}
    
message GMWallSetDurableParams {
    int32 Amount = 1;
}
    
message GMAddBattleLogParams {
    int32 Amount = 1;
}
    
message GMRefreshRankListParams {
    
}
    
message GMAddBuildingParams {
    int32 BuildingId = 1;
    int32 Level = 2;
}
    
message GMFinishTaskParams {
    int32 Category = 1;
    int32 Id = 2;
}
    
message GMFinishTasksInSectionParams {
    int32 StartId = 1;
    int32 EndId = 2;
}
    
message GMCloseConnParams {
    
}
    
message GMRefreshDailyTasksParams {
    
}
    
message GMCooldownSkillsParams {
    
}
    
message GMWallIsBrokenParams {
    
}
    
message GMAddServerParams {
    string Id = 1;
    string Name = 2;
}
    
message GMEnterServerParams {
    string Id = 1;
}
    
message GMAddAllTechsParams {
    
}
    
message GMReduceBeastHealthParams {
    int32 Id = 1;
    int32 Health = 2;
}
    
message GMUnlockGrowthFundParams {
    
}
    
message GMFinishRecommendedMainTasksParams {
    int32 Id = 1;
}
    
message GMSumSiegeParams {
    
}
    
message GMGetAllMainTaskAwardsParams {
    
}
    
message GMFinishCommonMainTasksParams {
    int32 Id = 1;
}
    
message GMFinishCurChapterTasksParams {
    
}
    
message GMChangeFinishedSevenDayTaskAmountParams {
    int32 Amount = 1;
}
    
message GMPurchaseSuccessParams {
    int32 Id = 1;
    int32 Category = 2;
}
    
message GMDeleteCardParams {
    int32 Id = 1;
}
    
message GMAddHeroSkillPointsParams {
    int32 Points = 1;
}
    
message GMFinishActivityTaskParams {
    int32 Id = 1;
}
    
message GMChangeCardExpiryTimeParams {
    int32 Id = 1;
}
    
message GMAddLimitTimeStageScoreParams {
    int32 Score = 1;
}
    
message GMBreakShieldParams {
    
}
    
message GMSetGiftGroupInfoParams {
    int32 GroupId = 1;
    int32 Days = 2;
}
    
message GMCloseGiftGroupParams {
    int32 GroupId = 1;
}
    
message GMEndNewbiePeriodParams {
    
}
    
message GMChangeEnergyParams {
    int32 Num = 1;
}
    
message GMSiegeAttackParams {
    
}
    
message GMTriggerRechargeTaskParams {
    
}
    
message GMServerShieldParams {
    
}
    
message GMRemoveServerShieldParams {
    
}
    
message GMRecoverBaseParams {
    
}
    
message GMAddBeautyFavorParams {
    int32 Value = 1;
}
    
message GMAddRoseParams {
    int32 Value = 1;
}
    
message GMLogTestParams {
    
}
    
message GMInvestigationAddProcessParams {
    int32 Process = 1;
}
    
message GMIndiEventStageRankSumParams {
    int32 Rank = 1;
    int32 RankNum = 2;
}
    
message GMAddXParams {
    int32 Amount = 1;
}
    
message GMAddJewel {
    int32 JewelId = 1;
    int32 Amount = 2;
}
    
message GMAddEquip {
    int32 EquipId = 1;
    int32 Amount = 2;
}
    
message GMAddAllJewel {
    int32 Amount = 1;
}
    
message GMAddAllEquip {
    int32 Amount = 1;
}
    
message GMAddForceUpdateMails {
    
}
    
message GMSendNewWarZoneRankEmailParams {
    int32 Period = 1;
    int32 Type = 2;
    int32 Rank = 3;
}
    
message GMBecomeKingParams {
    
}
    
message GMWarEndParams {
    
}
    
message GMResetKingdomEventParams {
    
}
    
message GMGetArenRankAwardsParams {
    int32 Rank = 1;
}
    
message GMAddWarRoll {
    int32 Amount = 1;
}
    
message GMAddPart {
    int32 PartId = 1;
    int32 Amount = 2;
}
    
message GMUnlockPlane {
    int32 PlaneId = 1;
}
    
message GMAddAllJPart {
    int32 Amount = 1;
}
    
message GMUnlockAllPlane {
    
}
    
message GetGodzillaOnlineBonusInfoParams {
    
}
    
message GetGodzillaOnlineBonusInfoRsp {
    repeated GodzillaBonusStatusInfo Info = 1;
}
    
message GetGodzillaOnlineBonusAwardParams {
    int32 Id = 1;
}
    
message GetGodzillaOnlineBonusAwardRsp {
    int32 NextId = 1;
}
    
message GodzillaOnlineBonusFinish {
    int32 Id = 1;
}
    
message GodzillaOnlineBonusUnlocked {
    
}
    
message GetHeroSkillsInfoParams {
    
}
    
message GetHeroSkillsInfoRsp {
    int32 SkillPoints = 1;
    repeated UnlockedHeroSkills Skills = 2;
    int32 Current = 3;
}
    
message LearnHeroSkillParams {
    int32 Page = 1;
    int32 Id = 2;
    int32 Category = 3;
}
    
message LearnHeroSkillRsp {
    int32 SkillPoints = 1;
    repeated UnlockedHeroSkill ChangedSkills = 2;
}
    
message UseActiveSkillParams {
    int32 Id = 1;
}
    
message ResetAllSkillsParams {
    int32 Page = 1;
}
    
message ResetAllSkillsRsp {
    int32 Points = 1;
    repeated UnlockedHeroSkill Skills = 2;
}
    
message UnlockedHeroSkill {
    int32 Id = 1;
    int32 Level = 2;
    int64 CoolDownAt = 3;
}
    
message HeroLevelUpInfo {
    repeated SkillPagePoints SkillPoints = 1;
    int32 HeroLevel = 2;
    int64 Exp = 3;
    int32 ChangedLevel = 4;
    int64 ChangedExp = 5;
    int32 Source = 6;
}
    
message UnlockedHeroSkills {
    int32 Page = 1;
    bool Unlocked = 2;
    int32 Points = 3;
    repeated UnlockedHeroSkill Skills = 4;
}
    
message SwitchHeroSkillPageParams {
    int32 Page = 1;
}
    
message SwitchHeroSkillPageRsp {
    int32 Points = 1;
}
    
message ActiveSkillInfo {
    int32 Id = 1;
    int64 CoolAt = 2;
    int64 ExpireAt = 3;
}
    
message GetActiveSkillsParams {
    
}
    
message GetActiveSkillsRsp {
    repeated ActiveSkillInfo Skills = 1;
}
    
message ActiveSkillCoolDown {
    int32 Id = 1;
}
    
message GetIndividualEventInfoParams {
    
}
    
message GetIndividualEventInfoRsp {
    SysActivityInfo Activity = 1;
    int32 Score = 2;
    int32 Level = 3;
    int64 StageEndAt = 4;
}
    
message ActivityStageSwitch {
    int32 ActivityId = 1;
    int32 Stage = 2;
    int32 TriggerId = 3;
    int64 StageEndAt = 4;
    int64 ReadyTill = 5;
}
    
message IndividualEventStageBonus {
    
}
    
message GetInvestigationActivityInfoParams {
    
}
    
message GetInvestigationActivityInfoRsp {
    int64 RefreshAt = 1;
    repeated UnlockedInvestigationTask Unlocked = 2;
    repeated AccomplishedInvestigationTask Accomplished = 3;
}
    
message GetInvestigationTaskAwardParams {
    int32 Id = 1;
}
    
message UnlockedInvestigationTask {
    int32 Id = 1;
    int32 Process = 2;
}
    
message AccomplishedInvestigationTask {
    int32 Id = 1;
    bool AwardTaken = 2;
}
    
message InvestigationTaskRefresh {
    
}
    
message ItemUseParams {
    int32 ConfId = 1;
    int32 Amount = 2;
    int32 ChooseItemId = 3;
}
    
message ItemUseFlyCityParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message ItemUseRookieFlyCityParams {
    string ServerId = 1;
}
    
message ItemUseAllianceFlyCityParams {
    
}
    
message ItemBuyParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message ItemBuyAndUseParams {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message RandFlyCityLoc {
    int32 X = 1;
    int32 Y = 2;
    bool IsBeaten = 3;
}
    
message RookieFlyCityLoc {
    int32 X = 1;
    int32 Y = 2;
}
    
message ItemBatchUseParams {
    repeated Item ItemAmounts = 1;
}
    
message ItemInfo {
    Item Item = 1;
}
    
message ItemInfos {
    repeated Item Items = 1;
}
    
message BuffItem {
    int32 Id = 1;
    int32 ConfId = 2;
    int32 Value = 3;
    int32 Source = 4;
    int32 SourceId = 5;
    int64 ExpireAt = 6;
    int64 StartAt = 7;
}
    
message Item {
    int32 ConfId = 1;
    int32 Amount = 2;
}
    
message Buff {
    int32 ConfId = 1;
    int32 Value = 2;
}
    
message ResAmount {
    int32 Category = 1;
    int64 Amount = 2;
    int64 SafeAmount = 3;
}
    
message GetAllianceFlyCityPosParams {
    
}
    
message GetAllianceFlyCityPosRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message UseAddUpExchangeParams {
    int32 ConfId = 1;
    int32 Category = 2;
}
    
message ItemBuyResParams {
    repeated ResAmount ResAmounts = 1;
}
    
message ItemCallRallyMonsterParams {
    int32 ConfId = 1;
}
    
message CallRallyMonsterRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message ItemUseRsp {
    repeated Reward Rewards = 1;
}
    
message RookieFlyCityRsp {
    string NewServer = 1;
    int32 X = 2;
    int32 Y = 3;
    int32 MapConfId = 4;
}
    
message UseCDKeyParams {
    string Key = 1;
}
    
message UseCDKeyRsp {
    repeated Reward Rewards = 1;
    int32 Result = 2;
}
    
message KingInfo {
    string ServerName = 1;
    string UserId = 2;
    int64 OccupiedAt = 3;
    int64 TransferDeadline = 4;
    int64 Funds = 5;
}
    
message ThroneBuildingInfo {
    int32 BuildingId = 1;
    string UserId = 2;
    int32 GarrisonMax = 3;
}
    
message GetKingWarInfoParams {
    
}
    
message GetKingWarInfoRsp {
    PlayerShowInfo KingInfo = 1;
    string Alliance = 2;
    bool InWar = 3;
    int64 NextTime = 4;
}
    
message KingChangeServerNameParams {
    string Name = 1;
}
    
message TransferCrownParams {
    string UserId = 1;
}
    
message GetKingdomGiftInfosParams {
    
}
    
message GetKingdomGiftInfosRsp {
    repeated KingdomGiftInfo Infos = 1;
}
    
message SendGiftParams {
    repeated string UserIds = 1;
    int32 GiftId = 2;
}
    
message GetTitlesInfoParams {
    
}
    
message GetTitlesInfoRsp {
    repeated TitleDetailInfo Titles = 1;
}
    
message KingGiveTitleParams {
    string UserId = 1;
    int32 Title = 2;
}
    
message KingRemoveTitleParams {
    string UserId = 1;
    int32 Title = 2;
}
    
message GetHistoryKingsParams {
    
}
    
message GetHistoryKingsRsp {
    repeated RankMsg Kings = 1;
}
    
message GetWarLogsParams {
    
}
    
message GetWarLogsRsp {
    repeated KingdomWarLog Logs = 1;
}
    
message KingSkillParams {
    int32 SkillId = 1;
    string Param = 2;
}
    
message GetPlayerPositionParams {
    string Name = 1;
}
    
message GetPlayerPositionRsp {
    repeated UserPublicInfo PublicInfos = 1;
}
    
message GetBlackMoneyBuyDiamondParams {
    
}
    
message GetBlackMoneyBuyDiamondRsp {
    int32 Times = 1;
    int32 Cost = 2;
}
    
message GetCityFundDonationParams {
    
}
    
message GetCityFundDonationRsp {
    int64 SelfFund = 1;
    int64 CityFund = 2;
    int64 CityHonor = 3;
}
    
message DonateCityFundParams {
    int32 Selection = 1;
}
    
message GetKingdomGiftRecordsParams {
    
}
    
message GetKingdomGiftRecordsRsp {
    repeated KingdomGiftRecord Records = 1;
}
    
message CannonAttack {
    int32 X = 1;
    int32 Y = 2;
}
    
message GetKingInfoParams {
    
}
    
message GetKingInfoRsp {
    KingInfo Info = 1;
}
    
message LimitTimeMatchHistoryRank {
    repeated RankMsg Members = 1;
    int64 RankTime = 2;
}
    
message LimitTimeMatchHistoryRanks {
    repeated LimitTimeMatchHistoryRank Ranks = 1;
}
    
message GetMatchInfoParams {
    
}
    
message GetMatchInfoRsp {
    SysActivityInfo Activity = 1;
    int64 TotalScore = 2;
    int32 TotalRank = 3;
    int64 StageScore = 4;
    int32 StageRank = 5;
}
    
message GetMatchRankParams {
    int32 Category = 1;
}
    
message GetMatchRankRsp {
    LimitTimeMatchHistoryRanks Rank = 1;
}
    
message SessionAuthParams {
    string AccountId = 1;
    string Token = 2;
}
    
message SessionAuthResponse {
    bool Success = 1;
}
    
message Ok {
    bool OK = 1;
}
    
message Fail {
    string Fail = 1;
}
    
message HeartbeatParams {
    
}
    
message Delete {
    string Name = 1;
    string Uuid = 2;
    int32 Reason = 3;
}
    
message DeleteById {
    string Name = 1;
    int32 Id = 2;
}
    
message LoginParams {
    string UserId = 1;
    string AccountId = 2;
    string Country = 3;
    string Device = 4;
    string DeviceOS = 5;
    string DeviceId = 6;
    string DeviceAdId = 7;
    string AppVersion = 8;
    int32 UID = 9;
    int32 Language = 10;
    string DeviceLanguage = 11;
    string APKVersion = 12;
}
    
message SetDeviceTokenParams {
    string Token = 1;
}
    
message SetDeviceAdIdParams {
    string DeviceAdId = 1;
}
    
message LoginRsp {
    UserInfo User = 1;
    repeated Item Items = 2;
    repeated Building Buildings = 3;
    repeated ResBuild ResBuilds = 4;
    repeated Resource Resources = 5;
    repeated Army Armies = 6;
    repeated InjuredArmy InjuredArmies = 7;
    repeated UpgradeEvent UpgradeEvents = 8;
    repeated TrainEvent TrainEvents = 9;
    repeated MissionEvent MissionEvents = 10;
    repeated CureEvent CureEvents = 11;
    repeated BeastCureEvent BeastCureEvents = 12;
    repeated Bookmark Bookmarks = 13;
    repeated Tech Techs = 14;
    repeated Tech BeastTechs = 15;
    Wall Wall = 16;
    MSInfos MSInfos = 17;
    repeated Builder Builders = 18;
    repeated Limit Limits = 19;
    repeated MarchWarning MarchWarnings = 20;
    repeated BuffItem BuffItems = 21;
    repeated AppliedAlliance AppliedAlliance = 22;
    int64 AllMessageIndex = 23;
    repeated ResAmount ResProtects = 24;
    AllianceTaskInfo AllianceTaskInfo = 25;
    int64 Now = 26;
    repeated Buff Buffs = 27;
    UserAllianceInfo UserAllianceInfo = 28;
    repeated Formation Formations = 29;
    GetMainTaskInfoRsp MainTaskInfo = 30;
    repeated AllianceBookmark AllianceBookmarks = 31;
    int64 NextBonusTime = 32;
    Item NextOnlineBonus = 33;
    int64 NextDailySignTime = 34;
    int64 NextRookieSignTIme = 35;
    repeated int32 AccomplishedDailyAward = 36;
    repeated AccomplishedAchievement AccomplishedAchievement = 37;
    repeated UnlockedHeroSkills PlayerSkills = 38;
    int32 PlayerSkillCurrentPage = 39;
    bool NewUser = 40;
    int32 SpecialShopRefreshFreeTimes = 41;
    FakeMission BattleCareInfo = 42;
    int32 UnreadAllianceMessages = 43;
    repeated LuaActivityFinish AwardFinish = 44;
    bool ResearchGift = 45;
    bool BeastTechGift = 46;
    int32 EnergyRecoverTick = 47;
    repeated int32 UnlockedAreas = 48;
    int32 FinishedGodzillaCategory = 49;
    ChapterTasksInfo ChapterTasksInfo = 50;
    int32 ServerMaxMonsterLevel = 51;
    repeated int32 ActivityIds = 52;
    repeated int32 AvailableActivitySkills = 53;
    repeated GiantBeast GiantBeasts = 54;
    bool GrowthFundBought = 55;
    GiftPackInfos GiftPacks = 56;
    repeated AccomplishedActivityTask AccomplishedActivityTasks = 57;
    bool EveryGiftTaken = 58;
    repeated int32 BoughtGemIds = 59;
    repeated int32 ABGroupIds = 60;
    repeated NotifySettingInfo NotifySettings = 61;
    repeated int32 CenterUpgradeGifts = 62;
    int32 MapConfId = 63;
    BeautyOnlineBonus BeautyOnlineBonus = 64;
    float RechargeInThirtyDays = 65;
    int64 ServerShield = 66;
    int64 ServerShieldStart = 67;
    repeated MonsterVisitInfo MonsterVisitInfo = 68;
    MemorialDayInfos MemorialDayInfos = 69;
    EagleHuntInfo EagleHuntInfo = 70;
    bool GemFundInfo = 71;
    repeated HuntHelicopter Helicopters = 72;
    int32 ChatShareTimes = 73;
    repeated DiamondFundInfo DiamondFundInfos = 74;
    repeated JewelInfo JewelBag = 75;
    repeated EquipInfo EquipBag = 76;
    JewelMakeInfo JewelMakeInfo = 77;
    EquipEvent EquipEvents = 78;
    repeated EquipSlotInfo EquipSlot = 79;
    ArmsRaceInfos ArmsRaceInfo = 80;
    bool MainTaskNewUser = 81;
    bool BeautyCanDate = 82;
    int64 SpecialShopRefreshAt = 83;
    bool CasinoFree = 84;
    repeated SystemSettings SystemSettings = 85;
    int32 OnlineBonusTime = 86;
    repeated Item OnlineBonusList = 87;
    repeated PartInfo PartBag = 88;
    repeated PlaneInfo PlaneBag = 89;
    repeated int32 CollectPlaneList = 90;
    repeated DressUpUsing DressUpUsing = 91;
}
    
message MemorialDayInfos {
    repeated MemorialDayTimesInfo Infos = 1;
}
    
message MemorialDayTimesInfo {
    int32 Category = 1;
    int32 Times = 2;
}
    
message ArmsRaceInfos {
    repeated ArmsRaceTimesInfo Infos = 1;
}
    
message ArmsRaceTimesInfo {
    int32 Category = 1;
    int32 Times = 2;
}
    
message GiftPackInfos {
    repeated GroupInfo GiftPacks = 1;
}
    
message GroupInfo {
    int32 GroupId = 1;
    int32 GiftId = 2;
    int32 PopUp = 3;
    int64 CloseAt = 4;
}
    
message GiftGroup {
    int32 Uuid = 1;
    int32 GroupId = 2;
    int32 GiftId = 3;
    bool SoldOut = 4;
}
    
message MSExchangeParams {
    int32 Category = 1;
    bool IsFree = 2;
}
    
message MSExchangeRsp {
    int32 Category = 1;
    int32 Amount = 2;
    int32 Critical = 3;
}
    
message MSAddChanceParams {
    int32 Amount = 1;
}
    
message ResAmountInfos {
    repeated ResAmount ResAmounts = 1;
}
    
message GemInfo {
    int32 Gem = 1;
}
    
message MSItem {
    int32 Category = 1;
    int32 UsedTimes = 2;
    int32 TotalTimes = 3;
}
    
message MSInfos {
    int32 FreeTimes = 1;
    repeated MSItem MSItems = 2;
    int32 RefreshAt = 3;
    int32 Level = 4;
}
    
message Limit {
    int32 Category = 1;
    int32 Amount = 2;
}
    
message ResProtects {
    repeated ResAmount ResProtects = 1;
}
    
message AllianceTaskInfo {
    repeated AllianceTask Tasks = 1;
    AllianceTaskTimes AllianceTaskTimes = 2;
    int64 NextFreeAt = 3;
    int64 NextRefreshTime = 4;
}
    
message LoginAtOtherPlace {
    bool OK = 1;
}
    
message HeartbeatRsp {
    int64 Now = 1;
}
    
message MSInfoParams {
    
}
    
message RankInfo {
    int32 RankPos = 1;
    int64 Score = 2;
    UserPublicInfo Info = 3;
}
    
message ReconnectParams {
    int32 PacketId = 1;
}
    
message ReconnectRsp {
    bool Success = 1;
}
    
message SetGuideStepParams {
    int32 Step = 1;
    int32 Version = 2;
    bool Finished = 3;
}
    
message SetTriggerGuideStepParams {
    TriggerGuideInfo Step = 1;
}
    
message SyncTimeParams {
    
}
    
message SyncTimeRsp {
    int64 Now = 1;
}
    
message MailSyncParams {
    int32 Category = 1;
    int32 FromMailNum = 2;
    int32 ToMailNum = 3;
}
    
message MailSyncRsp {
    repeated Mail Mails = 1;
}
    
message MailClaimParams {
    repeated string MailIds = 1;
}
    
message MailMultiRewardsRsp {
    repeated Reward MailRewards = 1;
    bool NeedAppUpdate = 2;
}
    
message MailMarkReadParams {
    int32 Category = 1;
    repeated string MailIds = 2;
}
    
message MailSendParams {
    int32 Category = 1;
    string ReceiverId = 2;
    string Content = 3;
    repeated int32 AlliancePos = 4;
}
    
message MailAddToGroupParams {
    string SessionId = 1;
    repeated string ReceiverIds = 2;
}
    
message MailDelFromGroupParams {
    string SessionId = 1;
    repeated string ReceiverIds = 2;
    bool IsQuit = 3;
}
    
message MailDeleteParams {
    int32 Category = 1;
    repeated string MailIds = 2;
}
    
message MailMarkFavoriteParams {
    bool IsFavorite = 1;
    repeated string MailIds = 2;
}
    
message RequestMailDataParams {
    string UserId = 1;
    string MailId = 2;
}
    
message RequestMailDataRsp {
    Mail MailData = 1;
}
    
message Mail {
    string Uuid = 1;
    string UserId = 2;
    int32 Number = 3;
    int32 Category = 4;
    int32 SubCategory = 5;
    string Subject = 6;
    string Content = 7;
    string Report = 8;
    string Sender = 9;
    string SenderId = 10;
    string Receiver = 11;
    int32 Flag = 12;
    string Alliance = 13;
    int32 Vip = 14;
    bool IsRead = 15;
    bool IsFavorite = 16;
    bool IsClaimed = 17;
    repeated Reward Rewards = 18;
    int64 CreatedAt = 19;
    int32 Status = 20;
    int32 MailType = 21;
    string Preview = 22;
    bool IsGzip = 23;
    int64 RewardExpiredAt = 24;
    string NeedVersion = 25;
}
    
message MailSetStatusParams {
    string MailId = 1;
    int32 Status = 2;
}
    
message MailGroup {
    string Uuid = 1;
    string Name = 2;
    repeated string UserIds = 3;
    string LastMsgName = 4;
    string LastMsgAvatar = 5;
    string LastMsgAlliance = 6;
    string LastMsgContent = 7;
    int64 LastMsgSentAt = 8;
}
    
message MailSession {
    string Uuid = 1;
    string UserId = 2;
    int32 Category = 3;
    string Title = 4;
    int64 UpdatedAt = 5;
    int32 MsgNumber = 6;
    repeated string MemberIds = 7;
    MailMessage LastMsg = 8;
    bool IsSpam = 9;
}
    
message MailMessage {
    string Uuid = 1;
    int32 Number = 2;
    string UserId = 3;
    int32 Category = 4;
    string Content = 5;
    int64 SentAt = 6;
    bool IsGameManager = 7;
    int32 ChattingType = 8;
    bool IsSpam = 9;
}
    
message MailMember {
    string UserId = 1;
    string Name = 2;
    string Avatar = 3;
    string Alliance = 4;
    int32 VipLevel = 5;
    bool VipActive = 6;
    repeated DressUpUsing DressUpUsing = 7;
}
    
message MailSyncSessionsParams {
    int64 Offset = 1;
}
    
message MailSyncSessionsRsp {
    repeated MailSessionInfo MailSessions = 1;
}
    
message MailSyncMessagesParams {
    string SessionId = 1;
    int32 FromMailNum = 2;
    int32 ToMailNum = 3;
}
    
message MailSyncMessagesRsp {
    repeated MailMessage MailMessages = 1;
}
    
message MailInfoParams {
    
}
    
message MailInfoRsp {
    repeated MailInfo MailInfos = 1;
    repeated string UnreadSessionIds = 2;
    repeated string TopSessionIds = 3;
}
    
message MailInfo {
    int32 Category = 1;
    int32 Max = 2;
    int32 Unread = 3;
    int32 Reward = 4;
    int32 Total = 5;
}
    
message MailSessionInfo {
    string Uuid = 1;
    string UserId = 2;
    int32 Category = 3;
    string Title = 4;
    int64 UpdatedAt = 5;
    int32 MsgNumber = 6;
    repeated MailMember Members = 7;
    MailMessage LastMsg = 8;
}
    
message MailMarkSessionReadedParams {
    string SessionId = 1;
    int32 Number = 2;
}
    
message MailDeleteSessionParams {
    repeated string SessionIds = 1;
}
    
message MailMarkReadAndClaimParams {
    int32 Category = 1;
}
    
message MailMessageInfo {
    string SessionId = 1;
    MailMessage MailMessage = 2;
}
    
message MailReward {
    repeated Reward Rewards = 1;
    int32 Category = 2;
}
    
message Rewards {
    repeated Reward Rewards = 1;
}
    
message Reward {
    int32 Category = 1;
    int32 ConfId = 2;
    int32 Amount = 3;
}
    
message MailDeleteAllParams {
    int32 Category = 1;
}
    
message MailDeleteAllSessionsParams {
    
}
    
message MailUnreadInfo {
    int32 Category = 1;
    int32 Unread = 2;
}
    
message MailGetSessionParams {
    string SessionId = 1;
}
    
message MailAddToGroupRsp {
    string SessionId = 1;
    repeated string Blocked = 2;
}
    
message MailDelAndQuitSessionParams {
    string SessionId = 1;
}
    
message MailChangeGroupNameParams {
    string SessionId = 1;
    string Name = 2;
}
    
message MailSetTopParams {
    string SessionId = 1;
    bool IsTop = 2;
}
    
message MailMarkAllSessionsReadParams {
    
}
    
message GetMainTaskInfoParams {
    
}
    
message GetMainTaskInfoRsp {
    repeated UnlockedMainTask Unlocked = 1;
    repeated AccomplishedMainTask Accomplished = 2;
}
    
message GetMainTaskAwardParams {
    int32 Id = 1;
}
    
message GetMainTaskAwardRsp {
    AccomplishedMainTask Task = 1;
}
    
message BoxTaskProcess {
    int32 BoxProcess = 1;
}
    
message AccomplishedMainTask {
    int32 Id = 1;
    bool AwardTaken = 2;
    int64 FinishTime = 3;
}
    
message AccomplishedMainTasks {
    repeated AccomplishedMainTask Tasks = 1;
}
    
message UnlockedMainTask {
    int32 Id = 1;
    int32 CurrentProcess = 2;
}
    
message UnlockedMainTasks {
    repeated UnlockedMainTask Tasks = 1;
}
    
message RecommedMainTaskOver {
    
}
    
message MapSearchMineParams {
    int32 Category = 1;
    int32 Level = 2;
}
    
message MapSearchMineRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapSearchMonsterParams {
    bool TaskSearch = 1;
    int32 Level = 2;
}
    
message MapSearchMonsterRsp {
    int32 X = 1;
    int32 Y = 2;
    int32 ConfId = 3;
}
    
message MapMatrixInfoParams {
    string ServerId = 1;
    string UserId = 2;
    int32 CenterX = 3;
    int32 CenterY = 4;
    int32 WidthRadius = 5;
    int32 HeightRadius = 6;
    bool ForceRefresh = 7;
}
    
message MapMatrixInfoRsp {
    repeated MapRec MapRecs = 1;
    repeated MapOwner MapOwners = 2;
    repeated MapMiner MapMiners = 3;
    repeated MapMarchLine MarchLines = 4;
    repeated int32 EmptyIds = 5;
}
    
message MapMarchLineInfo {
    MapMarchLine MarchLine = 1;
    MapOwner MapOwner = 2;
}
    
message MapAllianceMineInfoParams {
    int32 MineId = 1;
}
    
message MapAllianceMineInfoRsp {
    string Alliance = 1;
    AllianceMineInfo AllianceMineInfo = 2;
    repeated AllianceMiner AllianceMiners = 3;
}
    
message MapRec {
    int32 Id = 1;
    string OwnerId = 2;
    int32 Occupied = 3;
    int32 Category = 4;
    int32 ConfId = 5;
    int32 Value = 6;
    string AllianceId = 7;
    int32 FortressId = 8;
    string FortressIdList = 9;
    string ServerId = 10;
    int32 State = 11;
    int64 DeadTime = 12;
    string Params = 13;
}
    
message MapPointInfoParams {
    string ServerId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message MapSearchSecretBaseParams {
    
}
    
message MapSearchSecretBaseRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapBattleBegin {
    string EventId = 1;
    int32 X = 2;
    int32 Y = 3;
    bool IsWin = 4;
}
    
message MapFlyCity {
    int32 FromX = 1;
    int32 FromY = 2;
    int32 ToX = 3;
    int32 ToY = 4;
}
    
message DailySearchTimes {
    int32 Times = 1;
}
    
message MapInfosLeaveParams {
    
}
    
message GetMiniMapInfoParams {
    
}
    
message GetMiniMapInfoRsp {
    string ServerName = 1;
    string King = 2;
    string Flag = 3;
    int64 ProtectedTill = 4;
    int32 BasePos = 5;
    repeated int32 FavoritePos = 6;
    int32 AlliancePresidentPos = 7;
    repeated int32 AlliesPos = 8;
    repeated int32 AllianceFortressPos = 9;
    repeated int32 AllianceMarkPos = 10;
    repeated ServerSimpleInfo NearByServers = 11;
}
    
message ServerSimpleInfo {
    string ServerId = 1;
    string ServerName = 2;
    string Flag = 3;
    string King = 4;
    string KingAlliance = 5;
    int64 WarTIme = 6;
}
    
message MissionMarchParams {
    int32 X = 1;
    int32 Y = 2;
    int32 Category = 3;
    string BattleId = 4;
    repeated Army Armies = 5;
    string Param = 6;
    int32 BeastId = 7;
}
    
message MissionMiningParams {
    int32 X = 1;
    int32 Y = 2;
    string HeroId = 3;
    repeated Army Armies = 4;
    int32 BeastId = 5;
}
    
message MissionPVEParams {
    int32 X = 1;
    int32 Y = 2;
    string HeroId = 3;
    repeated Army Armies = 4;
    int32 BeastId = 5;
}
    
message MissionAttackParams {
    int32 X = 1;
    int32 Y = 2;
    string HeroId = 3;
    repeated Army Armies = 4;
    int32 BeastId = 5;
}
    
message MissionArriveParams {
    string EventId = 1;
}
    
message MissionReturnParams {
    string EventId = 1;
}
    
message MissionMarchRsp {
    MissionEvent Event = 1;
    repeated Army Armies = 2;
}
    
message MissionCancelMiningParams {
    string EventId = 1;
}
    
message MissionSpyParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message MissionIgnoreParams {
    string WarningId = 1;
}
    
message MissionIgnoreAllParams {
    bool Ok = 1;
}
    
message MissionReturnRsp {
    string EventId = 1;
    repeated Army Armies = 2;
    repeated InjuredArmy InjuredArmies = 3;
    repeated ResAmount ResAmounts = 4;
    repeated Item Items = 5;
}
    
message MarchWarning {
    string Uuid = 1;
    string UserId = 2;
    int32 Flag = 3;
    string Name = 4;
    string Avatar = 5;
    string Alliance = 6;
    int32 Level = 7;
    int32 StartX = 8;
    int32 StartY = 9;
    int32 StopX = 10;
    int32 StopY = 11;
    int32 Category = 12;
    int64 CreatedAt = 13;
    int64 ArriveAt = 14;
    repeated Army Armies = 15;
    bool Ignore = 16;
    repeated AllianceBattleMission Missions = 17;
    bool AskedHelp = 18;
    int64 RallyTill = 19;
    repeated GiantBeast Beasts = 20;
    repeated DressUpUsing DressUpUsing = 21;
}
    
message MissionEvent {
    string Uuid = 1;
    string UserId = 2;
    string ServerId = 3;
    int32 Category = 4;
    int32 Status = 5;
    int64 CreatedAt = 6;
    int64 FinishAt = 7;
    int32 Duration = 8;
    bool IsReturn = 9;
    int32 StartX = 10;
    int32 StartY = 11;
    int32 StopX = 12;
    int32 StopY = 13;
    repeated Reward Rewards = 14;
    float MineSpeed = 15;
    int64 MineFinishAt = 16;
    string AllianceBattleId = 17;
    int32 MarchSpeed = 18;
    repeated MissionTeam MissionTeams = 19;
    int32 SpeedChangeDistance = 20;
    int64 SpeedChangeAt = 21;
    string Params = 22;
    float Debuff = 23;
    repeated int32 SelfArmyTypes = 24;
    int32 SelfArmyTotal = 25;
    repeated int32 RallyArmyTypes = 26;
    int32 RallyArmyTotal = 27;
    bool IsRally = 28;
    bool FightFinish = 29;
    int64 RallyTill = 30;
    int64 RallyCreateAt = 31;
    string TargetId = 32;
    int32 RallyX = 33;
    int32 RallyY = 34;
}
    
message AIMissionEvent {
    string Uuid = 1;
    string TargetId = 2;
    string TargetName = 3;
    int32 Category = 4;
    int64 CreatedAt = 5;
    int64 FinishAt = 6;
    int32 Duration = 7;
    repeated Army Armies = 8;
    repeated MissionTeam Missions = 9;
    int32 StartX = 10;
    int32 StartY = 11;
    int32 StopX = 12;
    int32 StopY = 13;
    string Extend = 14;
    bool IsRallyAttack = 15;
    string TargetAllianceId = 16;
    repeated int32 ArmyTypes = 17;
    int32 ArmyTotal = 18;
}
    
message AIMissionArriveParams {
    string EventId = 1;
    bool GM = 2;
}
    
message MissionCancelCampParams {
    string EventId = 1;
}
    
message MissionCancelParams {
    string EventId = 1;
}
    
message GetRallyCaptainMissionParams {
    string EventId = 1;
}
    
message GetRallyCaptainMissionRsp {
    MapMarchLine Mission = 1;
}
    
message GetOnlineBonusParams {
    
}
    
message GetOnlineBonusRsp {
    Item Bonus = 1;
    int64 NextBonusTime = 2;
}
    
message OnlineBonus {
    repeated Item OnlineBonusList = 1;
    int64 NextBonusTime = 2;
    int32 OnlineBonusTime = 3;
}
    
message PartInfo {
    string Uuid = 1;
    int32 PartId = 2;
    bool IsUsed = 3;
    bool IsShow = 4;
}
    
message UpdatePartInfos {
    repeated PartInfo UpdateList = 1;
}
    
message DeltePart {
    repeated string DelList = 1;
}
    
message PutonPart {
    string Uuid = 1;
    int32 PartId = 2;
}
    
message PlaneInfo {
    int32 Id = 1;
    bool IsUnlock = 2;
    bool IsLaunch = 3;
    repeated PutonPart PartPutInfo = 4;
}
    
message UpdatePlane {
    repeated PlaneInfo UpdateList = 1;
}
    
message BuyPlanePartParams {
    int32 PartId = 1;
}
    
message BuyPlanePartRsp {
    string Uuid = 1;
    int32 PartId = 2;
}
    
message SellPartParams {
    repeated string Uuids = 1;
}
    
message SellPartRsp {
    bool IsOk = 1;
    int32 GetWarRoll = 2;
}
    
message UnlockPlaneParams {
    int32 PlaneId = 1;
}
    
message UnlockPlaneRsp {
    int32 PlaneId = 1;
}
    
message LaunchPlaneParams {
    int32 PlaneId = 1;
}
    
message LaunchPlaneRsp {
    int32 PlaneId = 1;
}
    
message UnlaunchPlaneParams {
    int32 PlaneId = 1;
}
    
message UnlaunchPlaneRsp {
    int32 PlaneId = 1;
}
    
message OnekeyLaunchPlaneParams {
    int32 PlaneId = 1;
}
    
message OnekeyLaunchPlaneRsp {
    int32 PlaneId = 1;
}
    
message AddCollectPlaneParams {
    int32 PlaneId = 1;
}
    
message AddCollectPlaneRsp {
    int32 PlaneId = 1;
}
    
message DelCollectPlaneParams {
    int32 PlaneId = 1;
}
    
message DelCollectPlaneRsp {
    int32 PlaneId = 1;
}
    
message GetSubscriptionInfoParams {
    int32 Id = 1;
}
    
message GetSubscriptionInfoRsp {
    SubInfo Info = 1;
}
    
message GetSubAwardParams {
    int32 Id = 1;
}
    
message SubInfo {
    int32 Id = 1;
    bool IsActivated = 2;
    int64 NextTime = 3;
    int32 RestTimes = 4;
    int64 ExpiryTime = 5;
}
    
message SubRestTimes {
    int32 Id = 1;
    int32 RestTimes = 2;
}
    
message GetCardStatusParams {
    int32 Category = 1;
}
    
message GetCardStatusRsp {
    repeated CardInfo Info = 1;
}
    
message CardInfo {
    int32 Id = 1;
    bool IsActivated = 2;
    int32 RestTimes = 3;
    int64 NextTime = 4;
    int64 ExpiryTime = 5;
}
    
message GetCardAwardParams {
    int32 Id = 1;
}
    
message GetCardAwardRsp {
    int32 Id = 1;
    int32 RestTimes = 2;
    int64 NextTime = 3;
}
    
message GetGrowthFundInfoParams {
    
}
    
message GetGrowthFundInfoRsp {
    repeated GrowthFundAwardInfo Infos = 1;
}
    
message GrowthFundAwardInfo {
    int32 Category = 1;
    int32 Status = 2;
}
    
message GetGrowthFundAwardParams {
    int32 Category = 1;
}
    
message CreateOrderParams {
    string ProductId = 1;
    int32 ConfId = 2;
    int32 Category = 3;
}
    
message CreateOrderRsp {
    string OrderId = 1;
}
    
message PurchaseSuccess {
    string OrderId = 1;
    string ProductId = 2;
    int32 ConfId = 3;
    int32 Category = 4;
}
    
message GetEveryDayGiftAwardParams {
    
}
    
message EveryDayGiftRefresh {
    int64 NextRefresh = 1;
}
    
message GiftPacksRefresh {
    int64 NextRefresh = 1;
}
    
message GemPacksRefresh {
    int32 Id = 1;
}
    
message GiftGroupInfo {
    string ServerId = 1;
    int32 Uuid = 2;
    int32 GroupId = 3;
    int64 OpenAt = 4;
    int64 CloseAt = 5;
    int64 RefreshAt = 6;
    bool DailyRefresh = 7;
    repeated GiftGroupCondition Conditions = 8;
    repeated int32 Relations = 9;
    int32 PopUp = 10;
    int32 UpperLimitDays = 11;
    int32 LowerLimitDays = 12;
    int32 UpperLimitInNDays = 13;
    int32 LowerLimitInNDays = 14;
    int32 LowerLimit = 15;
    int32 UpperLimit = 16;
}
    
message GiftGroupClose {
    int32 GroupId = 1;
}
    
message GiftGroupOpen {
    int32 GroupId = 1;
    int32 GiftId = 2;
    int64 CloseAt = 3;
}
    
message NewGiftIds {
    repeated int32 Ids = 1;
}
    
message RankParam {
    int32 Category = 1;
    int32 Offset = 2;
    int32 Limit = 3;
}
    
message RankInfoRsp {
    int32 Category = 1;
    int32 Offset = 2;
    int32 SelfRank = 3;
    repeated RankMsg RankInfo = 4;
}
    
message ResBuildCollectParams {
    int32 BuildingId = 1;
}
    
message ResBuildBuyBuffParams {
    int32 BuildingId = 1;
}
    
message ResBuildUseBuffItemParams {
    int32 BuildingId = 1;
    int32 Amount = 2;
}
    
message ResBuildCollectRsp {
    repeated ResAmount ResAmounts = 1;
    repeated CollectAmount CollectAmounts = 2;
    repeated ResBuild ResBuilds = 3;
}
    
message ResBuildBuyBuffRsp {
    ResBuild ResBuild = 1;
    int32 Gem = 2;
}
    
message ResBuildCollectSingleParams {
    int32 BuildingId = 1;
}
    
message ResBuild {
    int32 Id = 1;
    int32 Category = 2;
    float Produce = 3;
    int32 Storage = 4;
    int64 UpdatedAt = 5;
    float BuffRatio = 6;
    int64 BuffExpireAt = 7;
}
    
message ResBuilds {
    repeated ResBuild ResBuilds = 1;
}
    
message SkillGetAllResInfo {
    repeated SkillGetResInfo Res = 1;
}
    
message SevenDaysActivityDailyInfos {
    int32 Day = 1;
    repeated SevenDaysTask Tasks = 2;
}
    
message SevenDaysActivityDailyFinishedInfos {
    int32 Day = 1;
    repeated FinishedTask Tasks = 2;
}
    
message GetSevenDaysTaskInfosParams {
    
}
    
message GetSevenDaysTaskInfosRsp {
    int32 Today = 1;
    int32 Score = 2;
    repeated SevenDaysActivityDailyInfos Infos = 3;
    repeated SevenDaysActivityDailyFinishedInfos Finished = 4;
    repeated SevenDaysBox Awards = 5;
}
    
message SevenDaysBox {
    int32 Id = 1;
    bool Status = 2;
}
    
message SevenDaysTask {
    int32 Id = 1;
    int32 CurrentProcess = 2;
    int32 Status = 3;
}
    
message SevenDaysTasks {
    repeated SevenDaysTask Tasks = 1;
}
    
message AccomplishedSevenDaysTask {
    int32 Id = 1;
}
    
message AccomplishedSevenDaysTasks {
    repeated AccomplishedSevenDaysTask Tasks = 1;
}
    
message GetSevenDaysTaskRewardParams {
    int32 TaskId = 1;
}
    
message GetSevenDaysTaskBonusParams {
    int32 BonusId = 1;
}
    
message ParticipateSiegeParams {
    string AllianceId = 1;
}
    
message SiegeInfoParams {
    string AllianceId = 1;
}
    
message SiegeInfoRsp {
    int64 StartTime = 1;
    int64 EndTime = 2;
}
    
message SiegeRankParams {
    int32 Category = 1;
}
    
message SiegeRankRsp {
    int64 PlayerScore = 1;
    int32 PlayerPos = 2;
    int64 AllianceScore = 3;
    int32 AlliancePos = 4;
}
    
message ExploreRewardInfo {
    int32 Type = 1;
    Reward Reward = 2;
}
    
message ExploreInfo {
    int32 Times = 1;
    int64 StartTime = 2;
    repeated ExploreRewardInfo Rewards = 3;
    int64 EndTime = 4;
    int32 PlayerLevel = 5;
    string EventId = 6;
}
    
message GetExploreInfoParams {
    
}
    
message GetExploreInfoRsp {
    ExploreInfo ExploreInfo = 1;
}
    
message ExploreRewardParams {
    
}
    
message ExploreRewardRsp {
    repeated ExploreRewardInfo Rewards = 1;
    bool FinishExplore = 2;
}
    
message PlayerSiegeInfoRsp {
    bool InWar = 1;
    int64 EndTime = 2;
    int32 Round = 3;
    int32 SiegeFrom = 4;
    int64 NextRoundStartAt = 5;
    int32 FightingMembers = 6;
}
    
message SiegeHistoryRankParams {
    int32 Category = 1;
}
    
message SiegeHistoryRankRsp {
    repeated RankMsg RankInfos = 1;
    int64 LastSumAt = 2;
}
    
message SignInfo {
    int32 Day = 1;
    Item Bonus = 2;
    bool Signed = 3;
}
    
message GetSignInfosParams {
    
}
    
message GetSignInfosRsp {
    repeated SignInfo Infos = 1;
    bool Signed = 2;
}
    
message SignParams {
    
}
    
message GetRookieSignInfosParams {
    
}
    
message RookieSignInfosRsp {
    repeated SignInfo Infos = 1;
    bool CanSign = 2;
}
    
message RookieSignParams {
    
}
    
message SignRsp {
    int64 NextSignTime = 1;
}
    
message RookieSignRsp {
    int64 NextSignTime = 1;
}
    
message DailySignRefresh {
    repeated SignInfo Infos = 1;
}
    
message RookieSignRefresh {
    
}
    
message GetSpecialGoodListsParams {
    
}
    
message BuySpecialGoodsParams {
    int32 Category = 1;
}
    
message BuySpecialGoodsRsp {
    int32 Category = 1;
    int32 GoodsId = 2;
}
    
message RefreshSpecialGoodsParams {
    
}
    
message RefreshSpecialGoodsRsp {
    repeated BuySpecialGoodsRsp GoodsList = 1;
    GemInfo RefreshNeed = 2;
}
    
message SpecialGoodListsRsp {
    repeated BuySpecialGoodsRsp GoodsList = 1;
    GemInfo RefreshNeed = 2;
    int32 NextRefreshAt = 3;
}
    
message TechUpgradeParams {
    int32 ConfId = 1;
    bool Instant = 2;
}
    
message TechUpgradeRsp {
    repeated ResAmount ResAmounts = 1;
    UpgradeEvent Event = 2;
}
    
message TechBuyUpgradeRsp {
    int32 Gem = 1;
    repeated ResAmount ResAmounts = 2;
    Tech Tech = 3;
}
    
message TechFinishRsp {
    string EventId = 1;
    int32 ConfId = 2;
    int32 TechLevel = 3;
    int32 TechType = 4;
}
    
message GetTechResearchGiftParams {
    int32 Type = 1;
}
    
message TechResearchGiftRsp {
    ResAmount Gift = 1;
}
    
message ThreeClearChaptersInfoParams {
    
}
    
message ThreeClearChaptersInfoRsp {
    repeated ThreeClearChapterInfo Infos = 1;
}
    
message ThreeClearMissionInfoParams {
    int32 Id = 1;
}
    
message ThreeClearMissionInfoRsp {
    ThreeClearMissionInfo Info = 1;
}
    
message ChooseMissionParams {
    int32 Id = 1;
}
    
message ThreeClearMopUpMissionParams {
    int32 Id = 1;
}
    
message ThreeClearMopUpRsp {
    repeated Item Rewards = 1;
}
    
message BattleTipInfo {
    int32 Id = 1;
    string Content = 2;
    repeated string Avatar = 3;
    repeated string Icon = 4;
    string Title = 5;
    bool HaveTitle = 6;
}
    
message GetUserInfoParams {
    string UserId = 1;
}
    
message UserInfoRsp {
    string Name = 1;
    string Server = 2;
    string Declaration = 3;
    int32 HeroLevel = 4;
    int64 HeroExp = 5;
    repeated Weapon Weapons = 6;
    int32 Flag = 7;
    int32 Energy = 8;
    int64 EnergyRefreshAt = 9;
    string Avatar = 10;
    int32 Image = 11;
    int32 Kills = 12;
    int64 Honor = 13;
    int64 Power = 14;
    int32 VipLevel = 15;
    string AllianceId = 16;
    string AllianceName = 17;
    int32 Bust = 18;
    int32 Level = 19;
    repeated PublicEquipSlotInfo PublicEquipSlot = 20;
    bool AllianceFreeJoin = 21;
    int32 AllianceJoinLevel = 22;
    int64 AllianceJoinPower = 23;
    int32 AchievementNum = 24;
    repeated DressUpUsing DressUpUsing = 25;
}
    
message ModifyUserNameParams {
    string Name = 1;
}
    
message ModifyHideVipInfoParams {
    bool Status = 1;
}
    
message IsModifyContentValidRsp {
    bool IsValid = 1;
    string Reason = 2;
}
    
message IsUserNameValidParams {
    string Name = 1;
}
    
message IsUserDeclarationValidParams {
    string Declaration = 1;
}
    
message IsNameValidSensitiveParams {
    string Name = 1;
}
    
message IsNameValidSensitiveRsp {
    bool IsValid = 1;
    string Reason = 2;
}
    
message ModifyUserDeclarationParams {
    string Declaration = 1;
}
    
message ModifyUserFlagParams {
    int32 Flag = 1;
}
    
message GetUserLanguageParams {
    
}
    
message GetUserLanguageRsp {
    int32 Language = 1;
}
    
message SetUserLanguageParams {
    int32 Language = 1;
}
    
message UserEnergy {
    int32 Energy = 1;
    int64 EnergyRefreshAt = 2;
    int32 EnergyRecoverTick = 3;
}
    
message UserInfoSearchParams {
    string Pattern = 1;
    int32 Limit = 2;
}
    
message UserInfoSearchRsp {
    repeated UserSearchInfo UserSearchInfos = 1;
}
    
message UserSearchInfo {
    string Uuid = 1;
    string Name = 2;
    string Avatar = 3;
    string Alliance = 4;
    repeated DressUpUsing DressUpUsing = 5;
}
    
message UserTotalPower {
    int64 Power = 1;
    int64 ChangedPower = 2;
    int32 Source = 3;
}
    
message MaxMonsterLevel {
    int32 Level = 1;
}
    
message ProtectedAt {
    int64 ProtectedAt = 1;
}
    
message UploadUserAvatarParams {
    string Avatar = 1;
}
    
message ModifyUserAvatarAndBustParams {
    int32 Id = 1;
}
    
message ModifyUserAvatarToSystemAvatarParams {
    int32 Id = 1;
}
    
message GetUserDetailedPowerInfoParams {
    
}
    
message GetUserDetailedPowerInfoRsp {
    int64 TotalPower = 1;
    int64 HeroPower = 2;
    int64 ArmiesPower = 3;
    int64 BuildingsPower = 4;
    int64 TrapsPower = 5;
    int64 TechsPower = 6;
    int64 BeastPower = 7;
    int64 EquipPower = 8;
}
    
message GetUserDetailedBattleInfoParams {
    string UserId = 1;
}
    
message GetUserDetailedBattleInfoRsp {
    int32 BattleVictoryTimes = 1;
    int32 BattleDefeatedTimes = 2;
    int32 AttackVictoryTimes = 3;
    int32 AttackDefeatedTimes = 4;
    float Winrate = 5;
    int32 SpyTimes = 6;
    int32 BeatEnemies = 7;
    int32 ArmiesDead = 8;
    int32 ArmiesCured = 9;
}
    
message UserPublicInfo {
    string UserId = 1;
    string ServerId = 2;
    string Name = 3;
    string Alliance = 4;
    int32 Level = 5;
    int32 Flag = 6;
    string Avatar = 7;
    double Power = 8;
    int32 BaseX = 9;
    int32 BaseY = 10;
    bool IsOnline = 11;
    int64 ActiveAt = 12;
    int32 AlliancePos = 13;
    int64 Honor = 14;
    int32 MaxAssist = 15;
    string AllianceId = 16;
    int64 AllianceJoinedAt = 17;
    int32 VipLevel = 18;
    int32 MaxRally = 19;
    string Declaration = 20;
    int32 HeroLevel = 21;
    int64 HeroExp = 22;
    int32 Image = 23;
    int64 ProtectedAt = 24;
    int32 Beat = 25;
    bool VipActivated = 26;
    int32 VipPoints = 27;
    int64 VipExpTime = 28;
    bool HideVipInfo = 29;
    int32 AllianceOfficer = 30;
    int32 Language = 31;
    bool IsKing = 32;
    int32 Title = 33;
    int32 Bust = 34;
    int32 BattleVictoryTimes = 35;
    int32 BattleDefeatedTimes = 36;
    int32 AttackVictoryTimes = 37;
    int32 AttackDefeatedTimes = 38;
    float WinRate = 39;
    int32 SpyTimes = 40;
    int32 ArmiesDead = 41;
    int32 ArmiesCured = 42;
    int32 RadarLevel = 43;
    int64 ResProtectedAt = 44;
    int32 DeviceType = 45;
    string DeviceToken = 46;
    repeated NotifySettingInfo NotifyBlockSettings = 47;
    int32 ShieldSource = 48;
    int64 ServerShieldBroken = 49;
    bool BaseRecovered = 50;
    bool IsGameManager = 51;
    int32 ChattingType = 52;
    string AllianceName = 53;
    repeated PublicEquipSlotInfo PublicEquipSlot = 54;
    repeated SystemSettings SystemSettings = 55;
    int32 AchievementNum = 56;
    int32 AvatarFrame = 57;
    int32 ChatBubble = 58;
    int32 NamePlate = 59;
}
    
message UserPublicRspInfo {
    string UserId = 1;
    string ServerId = 2;
    string Name = 3;
    string Alliance = 4;
    int32 Level = 5;
    int32 Flag = 6;
    string Avatar = 7;
    int64 Power = 8;
    int32 BaseX = 9;
    int32 BaseY = 10;
    bool IsOnline = 11;
    int64 ActiveAt = 12;
    int32 AlliancePos = 13;
    int64 Honor = 14;
    int32 MaxAssist = 15;
    string AllianceId = 16;
    int64 AllianceJoinedAt = 17;
    int32 VipLevel = 18;
    int32 MaxRally = 19;
    string Declaration = 20;
    int32 HeroLevel = 21;
    int64 HeroExp = 22;
    int32 Image = 23;
    int64 ProtectedAt = 24;
    int32 Beat = 25;
    bool VipActivated = 26;
    int32 VipPoints = 27;
    int64 VipExpTime = 28;
    bool HideVipInfo = 29;
    int32 AllianceOfficer = 30;
    int32 Language = 31;
    bool IsKing = 32;
    int32 Title = 33;
    int32 Bust = 34;
    repeated DressUpUsing DressUpUsing = 35;
}
    
message UserGetProtectParams {
    int32 ProtectDuration = 1;
    int32 Source = 2;
}
    
message UserStartNewGameParams {
    
}
    
message UserSwitchRoleParams {
    string RoleId = 1;
}
    
message UserGetRolesParams {
    
}
    
message UserGetRolesRsp {
    repeated RpcRoleInfo Roles = 1;
}
    
message GetAllUserDetailedInfoParams {
    
}
    
message GetAllUserDetailedInfoRsp {
    repeated UserDetailedInfo Infos = 1;
}
    
message UserDetailedInfo {
    int32 Category = 1;
    repeated BuffSource Value = 2;
}
    
message BuffSource {
    int32 Category = 1;
    int64 Value = 2;
}
    
message UserBeatEnemiesNotify {
    int32 BeatEnemies = 1;
}
    
message CleanJoinUnionRecommendParams {
    
}
    
message CanUploadAvatarParams {
    
}
    
message CanUploadAvatarRsp {
    int32 Result = 1;
}
    
message SetNotifyBlockParams {
    int32 Id = 1;
    bool Open = 2;
}
    
message ModifyAvatarCoolInfoParams {
    
}
    
message ModifyAvatarCoolInfoRsp {
    int32 Count = 1;
    int64 CoolAt = 2;
}
    
message EvaluateGameParams {
    
}
    
message RookieShieldChange {
    bool Change = 1;
}
    
message RecordLogParams {
    int32 Category = 1;
    string Value = 2;
}
    
message ServerShield {
    int64 ProtectedAt = 1;
    int64 StartAt = 2;
}
    
message FindSameNameParams {
    string ServerId = 1;
}
    
message FindSameNameRsp {
    bool Result = 1;
}
    
message NameModified {
    string NewName = 1;
}
    
message SetSystemSettings {
    int32 Id = 1;
    int32 Status = 2;
}
    
message SetSystemSettingsRsp {
    int32 Id = 1;
    int32 Status = 2;
}
    
message SystemSettings {
    int32 Id = 1;
    int32 Status = 2;
}
    
message AccountBindParams {
    
}
    
message CheckAccountBindRewardsParams {
    
}
    
message AllianceSearchPlayerInfo {
    string UserId = 1;
    string ServerId = 2;
    string Name = 3;
    int32 Flag = 4;
    string Avatar = 5;
    int64 Power = 6;
    int32 Language = 7;
    repeated DressUpUsing DressUpUsing = 8;
    int32 Bust = 9;
}
    
message GetVipInfoParams {
    
}
    
message GetVipInfoRsp {
    int32 VipLevel = 1;
    int32 VipPoints = 2;
    bool VipIsActivated = 3;
    int64 ExpirationTime = 4;
}
    
message VipEventInfo {
    int32 VipLevel = 1;
    int32 VipPoints = 2;
    int64 ExpirationTime = 3;
    bool VipIsActivated = 4;
}
    
message VipExpireParams {
    
}
    
message GetVipGoodsListParams {
    
}
    
message GetVipGoodsListRsp {
    repeated BuyVipGoodsRsp GoodsList = 1;
    int64 NextRefreshAt = 2;
}
    
message BuyVipGoodsParams {
    int32 Category = 1;
    int32 Amount = 2;
}
    
message BuyVipGoodsRsp {
    int32 Category = 1;
    VipGoods VipGoods = 2;
    bool CanBuy = 3;
}
    
message VipShopRefresh {
    int64 RefreshAt = 1;
}
    
message WallRepairByItemParams {
    int32 BuildingId = 1;
}
    
message WallRepairByFreeParams {
    int32 BuildingId = 1;
}
    
message WallOutfireParams {
    int32 BuildingId = 1;
}
    
message WallRepairRsp {
    int32 Durable = 1;
    int64 FreeRepairAt = 2;
    int64 RefreshAt = 3;
}
    
message WallOutfireRsp {
    bool IsOnFire = 1;
}
    
message Wall {
    int32 Durable = 1;
    bool IsOnFire = 2;
    int64 OnFireAt = 3;
    int64 FreeRepairAt = 4;
    int32 MaxDurable = 5;
    int32 Duration = 6;
    int32 FireSpeed = 7;
    int64 RefreshAt = 8;
}
    
message WallFinishBurnParams {
    
}
    
message GetWarZoneTaskInfoParams {
    
}
    
message GetWarZoneTaskInfoRsp {
    repeated UnlockedTask Unlocked = 1;
    repeated AccomplishedTask Accomplished = 2;
    int64 EndAt = 3;
}
    
message GetWarZoneRankInfoParams {
    
}
    
message GetWarZoneRankInfoRsp {
    int32 PowerRank = 1;
    int32 BaseRank = 2;
    int32 PlayerLvRank = 3;
    int32 Period = 4;
    int64 SettleAt = 5;
}
    
message InitActivitiesParams {
    repeated IdPair Ids = 1;
    int64 Beginning = 2;
    int64 Ending = 3;
}
    
message InitActivityRsp {
    repeated int32 Success = 1;
    repeated InitActivityFail Fail = 2;
}
    
message InitActivityFail {
    int32 Uuid = 1;
    string Reason = 2;
}
    
message ChangeActivityEndingParams {
    int32 Id = 1;
    int64 Ending = 2;
}
    
message CloseActivityParams {
    int32 Id = 1;
}
    
message ActivityTimerParams {
    int32 ActivityId = 1;
}
    
message SetSysActivityStateParams {
    bool Open = 1;
    int32 Id = 2;
    string ServerId = 3;
}
    
message SetGiftGroupInfoParams {
    int32 GroupId = 1;
    int64 OpenAt = 2;
    int64 CloseAt = 3;
    bool DailyRefresh = 4;
    repeated GiftGroupCondition Conditions = 5;
    repeated int32 Relations = 6;
    int32 PopUp = 7;
    int32 UpperLimitDays = 8;
    int32 LowerLimitDays = 9;
    int32 UpperLimitInNDays = 10;
    int32 LowerLimitInNDays = 11;
    int32 LowerLimit = 12;
    int32 UpperLimit = 13;
}
    
message GiftGroupCondition {
    int32 Id = 1;
    int32 Value = 2;
}
    
message ChangeGiftGroupEndingParams {
    int32 GroupId = 1;
    int64 CloseAt = 2;
}
    
message ChangeGiftGroupPopUpParams {
    int32 GroupId = 1;
    int32 PopUp = 2;
}
    
message ResetPlayerGiftGroupCDParams {
    int32 GroupId = 1;
    string PlayerId = 2;
}
    
message SetPlayerActivityInfoParams {
    ActivityRpcInfo ActivityInfo = 1;
}
    
message SetPlayerGiftGroupInfoParams {
    GiftGroupRpcInfo GroupInfo = 1;
}
    
message GiftGroupTimerParams {
    int32 GroupId = 1;
}
    
message ChangeActivityBeginningParams {
    int32 Id = 1;
    int64 Beginning = 2;
}
    
message ChangeActivityTimeParams {
    int32 Id = 1;
    int64 Beginning = 2;
    int64 Ending = 3;
}
    
message SyncLimitTimeMatchInfoParams {
    int32 ActivityId = 1;
    int32 Stage = 2;
    int64 ReadyTill = 3;
    int64 CloseAt = 4;
}
    
message SyncIndividualEventInfoParams {
    int32 Stage = 1;
    int32 Trigger = 2;
    int64 ReadyTill = 3;
}
    
message GetLimitTimeMatchCacheParams {
    int32 ActivityId = 1;
}
    
message GetLimitTimeMatchCacheRsp {
    int32 ActivityId = 1;
    int32 Stage = 2;
    int64 ReadyTill = 3;
    int64 CloseAt = 4;
}
    
message GetIndividualEventCacheParams {
    
}
    
message GetIndividualEventCacheRsp {
    int32 Stage = 1;
    int32 Trigger = 2;
    int64 ReadyTill = 3;
}
    
message AllianceBattleRpcJoinParams {
    string UserId = 1;
    string AllianceId = 2;
    string BattleId = 3;
    AllianceBattleMission Mission = 4;
}
    
message AllianceBattleOnRemovalParams {
    string BattleId = 1;
    AllianceBattleMission Mission = 2;
    string DefenderAllianceId = 3;
    bool Immediate = 4;
    int32 TargetId = 5;
}
    
message AllianceBattleOnSpeedupParams {
    string BattleId = 1;
    int32 ConfId = 2;
}
    
message AllianceBattleReturnParams {
    string BattleId = 1;
    MissionTeam MissionTeam = 2;
    int32 StopX = 3;
    int32 StopY = 4;
    repeated Reward Rewards = 5;
    int32 ReturnEnergy = 6;
    bool FightFinish = 7;
    bool RewardImmidiately = 8;
    int32 RewardsReason = 9;
}
    
message AllianceBattleRpcAssistArriveParams {
    int32 PosNum = 1;
    repeated MissionTeam MissionTeams = 2;
}
    
message AllianceBattleRpcRallyArriveParams {
    MissionEvent Event = 1;
}
    
message AllianceBattleRpcAssistArriveRsp {
    repeated CombinedMissionTeamInfo CombinedTeams = 1;
    repeated MissionTeam MissionTeams = 2;
    repeated MissionTeam ReturnTeams = 3;
    MissionTeam SplitTeam = 4;
    int32 MissionStatus = 5;
}
    
message AllianceBattleForceDisbandParams {
    string BattleId = 1;
    string QuickReturnUserId = 2;
}
    
message DelAllianceBattleParams {
    string BattleId = 1;
}
    
message AllianceBuildingRpcGarrisonParams {
    int32 PosNum = 1;
    UserPublicInfo UserInfo = 2;
    repeated MissionTeam MissionTeams = 3;
}
    
message AllianceGarrisonRpcFinishParams {
    string AllianceId = 1;
    int32 Building = 2;
}
    
message AllianceBuildingRpcRemoveParams {
    repeated int32 Buildings = 1;
    bool FortressDestroy = 2;
    string UserId = 3;
}
    
message AllianceBuildingRpcBuildParams {
    string UserId = 1;
    int32 Building = 2;
    int32 Pos = 3;
}
    
message AllianceResRpcStoreParams {
    string UserId = 1;
    repeated ResAmount Resource = 2;
}
    
message AllianceResRpcSendBackParams {
    int32 ConfId = 1;
    repeated ResAmount Resource = 2;
    int32 Duration = 3;
    int32 X = 4;
    int32 Y = 5;
}
    
message AllianceResRpcRemoveParams {
    string UserId = 1;
    repeated ResAmount Resource = 2;
}
    
message AllianceBuildingRpcBuildCallbackParams {
    bool Rebuild = 1;
    int32 ConfId = 2;
}
    
message AllianceBuildingRpcMissionCallbackParams {
    repeated Army Armies = 1;
    MissionEvent Event = 2;
}
    
message AllianceBuildingRpcFortressUnderAttackParams {
    int32 X = 1;
    int32 Y = 2;
    UserPublicInfo UserInfo = 3;
    repeated MissionTeam MissionTeams = 4;
}
    
message AllianceBuildingRpcRecalTimeParams {
    string UserId = 1;
    int32 PosNum = 2;
}
    
message AllianceBuildingRpcGMFinishParams {
    int32 BuildingId = 1;
}
    
message RankPushParam {
    RankElement Element = 1;
}
    
message RankDelParam {
    string PlayerId = 1;
}
    
message AddToFilterParam {
    string AllianceId = 1;
    string PlayerId = 2;
    int64 FilterUntil = 3;
}
    
message AddToSevenDaysActivePoolParam {
    string PlayerId = 1;
    string Name = 2;
    int64 ActivedAt = 3;
}
    
message TopRankParam {
    int32 Lang = 1;
    int32 Top = 2;
}
    
message TopRankRsp {
    repeated RankElement RankList = 1;
}
    
message GetAllianceFilterListParam {
    string AllianceId = 1;
}
    
message GetAllianceFilterListRsp {
    repeated string FilterList = 1;
}
    
message GetSevenDaysActiveListParam {
    
}
    
message GetSevenDaysActiveListRsp {
    repeated RankElement ActiveList = 1;
}
    
message AllianceRpcChangeNameParams {
    string Name = 1;
    string UserId = 2;
}
    
message AllianceRpcChangeShortNameParams {
    string ShortName = 1;
    string UserId = 2;
}
    
message AllianceRpcRemoveParams {
    string MemberId = 1;
    int32 Reason = 2;
    string OperatorId = 3;
}
    
message AllianceRpcRemoveRsp {
    string AllianceId = 1;
    bool AllianceDeleted = 2;
}
    
message AllianceOnQuitParams {
    string AllianceId = 1;
    bool AllianceDeleted = 2;
}
    
message AllianceRpcHelpParams {
    string HelperId = 1;
    string TaskId = 2;
    string HelperName = 3;
}
    
message AllianceTasksOnHelpParams {
    string TaskId = 1;
    string HelperId = 2;
    string HelperName = 3;
}
    
message AllianceRpcJoinParams {
    string AllianceId = 1;
    string UserId = 2;
    int32 UserBaseLevel = 3;
    int64 UserPower = 4;
    bool IsInvited = 5;
}
    
message AllianceRpcApplyJoinParams {
    string AllianceId = 1;
    string UserId = 2;
    string Name = 3;
    string Avatar = 4;
    int32 BaseLevel = 5;
    int64 Power = 6;
    string Msg = 7;
}
    
message AllianceRpcAcceptApplyParams {
    string ApplyId = 1;
}
    
message AllianceRpcRefuseApplyParams {
    string ApplyId = 1;
}
    
message AllianceRpcCancelApplyParams {
    string ApplyId = 1;
    string UserId = 2;
}
    
message AllianceOnAcceptApplyParams {
    string ApplyId = 1;
    string AllianceId = 2;
}
    
message AllianceOnRefuseApplyParams {
    string AllianceId = 1;
}
    
message AllianceRpcStockShopItemParams {
    string UserName = 1;
    string UserId = 2;
    int32 ConfId = 3;
    int32 Amount = 4;
}
    
message AllianceRpcBuyShopItemParams {
    string UserName = 1;
    int32 ConfId = 2;
    int32 Amount = 3;
    string UserId = 4;
}
    
message AllianceRpcReplacePresidentParams {
    string UserId = 1;
    string UserName = 2;
    bool IsAbdicate = 3;
    bool Free = 4;
}
    
message AllianceRpcHelpSingleParams {
    string UserId = 1;
    string UserName = 2;
    string HelpId = 3;
    string Avatar = 4;
}
    
message AllianceRpcHelpAllParams {
    string UserId = 1;
    string UserName = 2;
    repeated string HelpedIds = 3;
    string Avatar = 4;
}
    
message AllianceRpcHelpAllRsp {
    repeated string HelpIds = 1;
}
    
message AllianceHelpOnHelpParams {
    string UserId = 1;
    string UserName = 2;
    int32 Category = 3;
    string EventId = 4;
    AllianceHelp Help = 5;
    string Avatar = 6;
}
    
message AllianceOnChangePosParams {
    string AllianceId = 1;
    int32 Pos = 2;
}
    
message AllianceRpcChangePosParams {
    string SenderId = 1;
    string UserId = 2;
    int32 Pos = 3;
    string SenderName = 4;
}
    
message AllianceRpcInviteParams {
    string UserId = 1;
    string SenderId = 2;
}
    
message AllianceRpcSetOfficerParams {
    string UserId = 1;
    int32 Officer = 2;
}
    
message AllianceIsMemberRallyParams {
    
}
    
message AllianceEmblemExpireParams {
    int32 Emblem = 1;
}
    
message AllianceOnEmblemBuffParams {
    int32 ConfId = 1;
}
    
message AllianceRpcTitleRemovedParams {
    int32 TitleId = 1;
}
    
message AllianceRpcTitleGivenParams {
    int32 TitleId = 1;
}
    
message AllianceChangePowerOrBeatParams {
    int32 Type = 1;
    double Changed = 2;
}
    
message AllianceRpcResAssistArrivedParam {
    repeated ResAmount Resource = 1;
    bool ResReturn = 2;
    string AssistingName = 3;
}
    
message AllianceRpcResAssistFailedParam {
    repeated ResAmount ReturnResource = 1;
}
    
message ReloadAllianceBeatNumParams {
    string AllianceId = 1;
}
    
message NotifyMembersCanReplacePresidentParams {
    
}
    
message AllianceRpcRefreshRankParams {
    
}
    
message AllianceRpcTaskUpdateParams {
    int32 Type = 1;
    int32 Process = 2;
}
    
message AllianceTaskUpdate {
    string AllianceId = 1;
}
    
message OnAllianceTaskUpdateParams {
    string AllianceId = 1;
}
    
message SyncAllianceTaskParams {
    string UserId = 1;
}
    
message InitAllianceTaskParams {
    string UserId = 1;
}
    
message SyncAllianceTaskRsp {
    repeated AllianceTaskChange Infos = 1;
}
    
message AllianceTaskChange {
    int32 Type = 1;
    int32 Process = 2;
}
    
message AllianceTechRpcResearchParam {
    string AllianceId = 1;
    string UserName = 2;
    string TechId = 3;
}
    
message AllianceTechRpcResearchRsp {
    string TechId = 1;
    int64 StartAt = 2;
    int64 EndAt = 3;
}
    
message AllianceTechRpcContriParam {
    string AllianceId = 1;
    string TechId = 2;
    AllianceTechContriCost Cost = 3;
    string PlayerId = 4;
}
    
message AllianceTechRpcContriRsp {
    AllianceTech Tech = 1;
    repeated ResAmount Costs = 2;
    repeated AllianceTechContriCost NextCosts = 3;
    int32 AddHonor = 4;
    int32 AddValue = 5;
}
    
message AllianceTechRpcUnrecmdParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechRpcRecmdParam {
    string AllianceId = 1;
    string TechId = 2;
}
    
message AllianceTechRpcMultiContriTimesParams {
    string UserId = 1;
    string TechId = 2;
    int32 Times = 3;
    bool GemContri = 4;
}
    
message AllianceTechRpcMultiContriTimesCallBackParams {
    int32 Times = 1;
    AllianceTech Tech = 2;
}
    
message AllianceTechRpcMultiContriParams {
    string UserId = 1;
    string TechId = 2;
    int32 Times = 3;
    bool GemContri = 4;
}
    
message AllianceTechRpcMultiContriRsp {
    int32 AddHonor = 1;
    int32 AddValue = 2;
}
    
message AllianceTechOnUpgradeParams {
    int32 ConfId = 1;
}
    
message AllianceContributionRankSumParams {
    
}
    
message ArenaSyncRankParam {
    int32 ActivityId = 1;
}
    
message ArenaRpcBattleParam {
    int32 ActivityId = 1;
    int32 DefenderRank = 2;
    ArenaBattleTroopInfo AttackerTroopInfo = 3;
    ArenaBattleTroopInfo DefenderTroopInfo = 4;
}
    
message ArenaRpcBattleRsp {
    bool IsWin = 1;
    string AttackerMailId = 2;
    string DefenderMailId = 3;
    BattleResult AttackerBattleResult = 4;
}
    
message BackStageMail {
    string Id = 1;
    string Title = 2;
    string Preview = 3;
    string Sender = 4;
    string Content = 5;
    repeated Reward Attachments = 6;
    int64 LastSignInTime = 7;
    int32 RechargeType = 8;
    int32 RechargeCompare = 9;
    int32 RechargeValue = 10;
    repeated string Devices = 11;
    repeated string Languages = 12;
    int64 Time = 13;
    int32 SecondCount = 14;
    string NeedVersion = 15;
    bool Star = 16;
}
    
message BackStageRpcPushMailParams {
    int32 MailId = 1;
    string Title = 2;
    string Preview = 3;
    string Sender = 4;
    string Content = 5;
    string Rewards = 6;
    bool IsStar = 7;
    repeated string RoleIds = 8;
    int64 LastSignInTime = 9;
    int32 RechargeType = 10;
    int32 RechargeCompare = 11;
    int32 RechargeValue = 12;
    repeated string Devices = 13;
    repeated string Languages = 14;
    int64 Time = 15;
    string NeedVersion = 16;
}
    
message BackStageRpcPushNotifyParams {
    int32 Category = 1;
    string Content = 2;
    int32 Language = 3;
    string Talker = 4;
}
    
message BackStageRpcGetMailsParams {
    int64 StartTime = 1;
    int32 SecondCount = 2;
}
    
message BackStageRpcGetMailsRsp {
    repeated BackStageMail Mails = 1;
}
    
message BackStageRpcSendToRoleParams {
    int32 MailId = 1;
    string Title = 2;
    string Preview = 3;
    string Sender = 4;
    string Content = 5;
    string Rewards = 6;
    bool IsStar = 7;
    string ReceiverId = 8;
}
    
message GetAllianceInfoByNameParams {
    string AllianceName = 1;
}
    
message GetAllianceInfoByNameRsp {
    Alliance Info = 1;
}
    
message BackstageChangeAllianceShortNameParams {
    string AllianceId = 1;
    string NewShortName = 2;
}
    
message BackstageChangeAllianceNameParams {
    string AllianceId = 1;
    string NewName = 2;
}
    
message BackstageChangePlayerNameParams {
    string PlayerId = 1;
    string NewName = 2;
}
    
message BackstageCleanMapRecParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message BackstageCleanPlayerAllianceInfoParams {
    string PlayerId = 1;
}
    
message BackstageReturnMissionParams {
    string PlayerId = 1;
    string MissionId = 2;
}
    
message BackstageCleanAllianceBattleParams {
    string BattleId = 1;
}
    
message CdkeyReward {
    int32 ItemId = 1;
    int32 Amount = 2;
}
    
message CdkeyConfigInfo {
    int32 Id = 1;
    string Name = 2;
    string Cdkey = 3;
    int32 People = 4;
    int32 Starttime = 5;
    int32 Validtime = 6;
    int32 Cycletime = 7;
    repeated CdkeyReward ItemIds = 8;
}
    
message FailList {
    int32 Uuid = 1;
    string Reason = 2;
}
    
message InitAllCdKeyConfig {
    repeated CdkeyConfigInfo ConfigList = 1;
}
    
message InitAllCdKeyConfigRsp {
    bool IsSuccess = 1;
    string Reason = 2;
}
    
message UpdateCdKeyConfig {
    repeated CdkeyConfigInfo ConfigList = 1;
}
    
message UpdateCdKeyConfigRsp {
    bool IsSuccess = 1;
    string Reason = 2;
}
    
message DeleteCdKeyConfig {
    repeated QueryInfo DeleteList = 1;
}
    
message DeleteCdKeyConfigRsp {
    bool IsSuccess = 1;
    string Reason = 2;
}
    
message QueryInfo {
    int32 Id = 1;
    string Cdkey = 2;
}
    
message QueryRetInfo {
    int32 Id = 1;
    int32 UsedCnt = 2;
}
    
message QueryCdKeyUsedCnt {
    repeated QueryInfo QueryList = 1;
}
    
message QueryCdKeyUsedCntRsp {
    bool IsSuccess = 1;
    string Reason = 2;
    repeated QueryRetInfo RetList = 3;
}
    
message BotRpcAddForAllianceParams {
    string ServerId = 1;
    string AllianceId = 2;
}
    
message BuffExpireParams {
    int32 BuffItemId = 1;
}
    
message UpdateAllianceDomainBuffParams {
    int32 FortressId = 1;
}
    
message SystemNotifyParams {
    NotifyInfo Notify = 1;
}
    
message ReceiveBackStageMailParams {
    BackStageMail Mail = 1;
}
    
message ModifyGDParams {
    repeated GameDataModify Modifies = 1;
}
    
message ModifyGDRsp {
    repeated GameDataChanged Modifies = 1;
}
    
message BanUserParams {
    int64 Duration = 1;
}
    
message MuteUserParams {
    repeated int32 Channels = 1;
    int64 Duration = 2;
}
    
message ResetUserParams {
    int32 ResetType = 1;
}
    
message ResetAllianceParams {
    int32 ResetType = 1;
    string TargetId = 2;
}
    
message KickUserParams {
    
}
    
message BattleReportsParams {
    int32 Offset = 1;
    int32 Limit = 2;
}
    
message BattleReportsRsp {
    repeated BattleLogInfo Reports = 1;
    int32 Total = 2;
}
    
message SkipGuideParams {
    string RoleId = 1;
    int32 SkipId = 2;
    bool IsTrigger = 3;
    bool OverTrigger = 4;
    int32 TriggerId = 5;
}
    
message SkipGuideRsp {
    string Result = 1;
}
    
message SearchStepParams {
    string RoleId = 1;
    int32 GuidType = 2;
}
    
message SearchStepRsp {
    string Result = 1;
    int32 StepId = 2;
    string Desc = 3;
}
    
message GameDataModify {
    string Uuid = 1;
    int32 Category = 2;
    int32 ConfId = 3;
    int64 Amount = 4;
}
    
message GameDataChanged {
    string Uuid = 1;
    int64 ChangedAmount = 2;
}
    
message BattleLogInfo {
    bool IsWin = 1;
    int32 Round = 2;
    string Attacker = 3;
    string Defender = 4;
    int32 BattleType = 5;
    repeated string Logs = 6;
    int64 CreatedAt = 7;
}
    
message GetStatisticsDataParams {
    string RoleId = 1;
}
    
message GetStatisticsDataRsp {
    repeated StatisticItem KillMonsterTimes = 1;
    repeated StatisticItem AttackMonsterTimes = 2;
    repeated StatisticItem CollectResTimes = 3;
    repeated StatisticItem CollectResAmount = 4;
    repeated StatisticItem FullMinedTimes = 5;
    int32 AttackVictoryTimes = 6;
    int32 AttackDefeatedTimes = 7;
    int32 DefendVictoryTimes = 8;
    int32 DefendDefeatedTimes = 9;
    repeated StatisticItem UseItemTimes = 10;
    int32 ResAssistCountTimes = 11;
    int32 ArmyAssistCountTimes = 12;
    int32 AllianceHelpTimes = 13;
    int32 AllianceContributeTimes = 14;
    int32 AllianceHelpTaskTimes = 15;
    repeated StatisticItem AddResProduceTimes = 16;
    int32 RallyTimes = 17;
    int32 RallyVictoryTimes = 18;
    int32 RallyDefeatedTimes = 19;
    int32 FlyCityTimes = 20;
    int32 UseGemAmount = 21;
    int32 GetOnlineBonusTimes = 22;
    int32 SpecialShopPurchaseTimes = 23;
    int32 SpecialShopRefreshTimes = 24;
    int32 SpyTimes = 25;
    int32 AssistVictoryTimes = 26;
    int32 AssistDefeatedTimes = 27;
    int32 UseResItemTimes = 28;
    int32 ExplorePrisonTimes = 29;
    int32 ExplorePrisonTotalTime = 30;
    int32 RouletteTimes = 31;
}
    
message StatisticItem {
    int32 Key = 1;
    int32 Value = 2;
}
    
message GetAllianceInfoByIdParams {
    string AllianceId = 1;
}
    
message GetAllianceInfoByIdRsp {
    Alliance Info = 1;
}
    
message BackStageToGetPlayerInfoParams {
    string PlayerId = 1;
}
    
message BackStageToGetPlayerInfoRsp {
    string PlayerData = 1;
}
    
message PlayerInfoItem {
    int32 Key = 1;
    string JsonStr = 2;
}
    
message BackStageSetGameManagerParams {
    string PlayerId = 1;
    bool IsGameManager = 2;
}
    
message IndividualEventStageEndParams {
    int32 Stage = 1;
    int32 Trigger = 2;
}
    
message PlayerUpdateActivityStageParams {
    int32 ActivityId = 1;
    int32 Stage = 2;
    int32 Trigger = 3;
    int64 StageEndAt = 4;
    int64 ReadyTill = 5;
}
    
message IndividualEventRpcStageRewardParams {
    int32 Rank = 1;
    int32 Num = 2;
    int32 Stage = 3;
    int32 OriginTriggerId = 4;
}
    
message KingRpcBecomeKingParams {
    int32 Category = 1;
}
    
message KingRpcGivenTitleParams {
    int32 Title = 1;
    string KingName = 2;
}
    
message KingRpcLostTitleParams {
    int32 Title = 1;
}
    
message KingRpcUnderAttackParams {
    int32 X = 1;
    int32 Y = 2;
    UserPublicInfo UserInfo = 3;
    repeated MissionTeam MissionTeams = 4;
}
    
message KingRpcAssistParams {
    int32 PosNum = 1;
    UserPublicInfo UserInfo = 2;
    repeated MissionTeam MissionTeams = 3;
}
    
message KingRpcNoticeParams {
    int32 Category = 1;
    int32 NotifyTimes = 2;
    int32 Time = 3;
}
    
message KingRpcCannonAttackParams {
    int32 CannonId = 1;
    string AllianceId = 2;
}
    
message KingOccupySuccessParams {
    string UserId = 1;
    string AllianceId = 2;
}
    
message NotifyKingdomInfoUpdateParams {
    GetKingWarInfoRsp Notify = 1;
}
    
message KingRpcSendGiftParams {
    string Sender = 1;
    repeated string Targets = 2;
    int32 GiftId = 3;
    int32 SenderTitle = 4;
}
    
message KingRpcSetTitleParams {
    int32 Category = 1;
    string TargetId = 2;
    int32 TitleId = 3;
    string OperatorName = 4;
}
    
message KingRpcReachTransferDeadlineParams {
    
}
    
message KingRpcTransferCrownParams {
    string TargetId = 1;
    string KingId = 2;
}
    
message MatchStageEndParams {
    int32 Stage = 1;
    string ServerId = 2;
}
    
message MapRpcFinishMiningParams {
    string ServerId = 1;
    int32 X = 2;
    int32 Y = 3;
    string UserId = 4;
    string EventId = 5;
}
    
message MapRpcMiningParams {
    string ServerId = 1;
    int32 X = 2;
    int32 Y = 3;
    string EventId = 4;
    string UserId = 5;
    string UserName = 6;
    string AllianceName = 7;
    float MineSpeed = 8;
    int32 ArmyLoad = 9;
    repeated Army Armies = 10;
    repeated GiantBeast Beasts = 11;
}
    
message MapRpcUpdateMiningArmiesParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
    string ServerId = 4;
    repeated Army Armies = 5;
    int32 ArmyLoad = 6;
    repeated GiantBeast Beasts = 7;
}
    
message MapRpcRefreshMineSpeedParams {
    string UserId = 1;
    int32 X = 2;
    int32 Y = 3;
    float MineSpeed = 4;
}
    
message MapRpcRefreshMineSpeedRsp {
    int64 FinishAt = 1;
}
    
message MapRpcMatrixInfoParams {
    string ServerId = 1;
    string UserId = 2;
    int32 CenterX = 3;
    int32 CenterY = 4;
    int32 WidthRadius = 5;
    int32 HeightRadius = 6;
    bool ForceRefresh = 7;
}
    
message MapRpcMatrixInfoRsp {
    repeated Point AddPoints = 1;
    repeated string LineIds = 2;
}
    
message MapRpcFindParams {
    int32 Id = 1;
}
    
message MapRpcFindRsp {
    MapRec MapRec = 1;
}
    
message MapRpcCheckCity {
    string UserId = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message MapRpcCheckCityRsp {
    bool Relocated = 1;
    int32 X = 2;
    int32 Y = 3;
}
    
message MapRpcPointInfoParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcAllocCityParams {
    string ServerId = 1;
    string UserId = 2;
    string UserName = 3;
    string AllianceName = 4;
}
    
message MapRpcAllocCityRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapFlyParams {
    Point From = 1;
    Point To = 2;
    string UserId = 3;
}
    
message MapRandFlyParams {
    Point From = 1;
    string UserId = 2;
}
    
message DeleteRookieFlyCityItemParams {
    
}
    
message MapRookieFlyParams {
    string UserId = 1;
}
    
message MapRpcDeleteCityParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
}
    
message MapAllianceFlyCityPosParams {
    string ServerId = 1;
    Point From = 2;
    string UserId = 3;
    Point PresidentPos = 4;
}
    
message MapAddLineParams {
    string ServerId = 1;
    MapMarchLine MarchLine = 2;
}
    
message MapDelLineParams {
    string ServerId = 1;
    string LineId = 2;
    int32 Reason = 3;
}
    
message AllianceBuildingRpcCreateParams {
    string AllianceId = 1;
    int32 ConfId = 2;
    string UserId = 3;
    int32 PosX = 4;
    int32 PosY = 5;
}
    
message AllianceRpcRecoverFortressParams {
    string UserId = 1;
    string AllianceId = 2;
    int32 ConfId = 3;
    bool Destroy = 4;
}
    
message MapRpcAttackMonsterParams {
    string ServerId = 1;
    int32 X = 2;
    int32 Y = 3;
    repeated Army Armies = 4;
    string EventId = 5;
    string UserId = 6;
}
    
message AllianceRpcDestroyBuildingParams {
    string AllianceId = 1;
    int32 ConfId = 2;
}
    
message MapRpcUserOfflineParams {
    string ServerId = 1;
    string UserId = 2;
}
    
message MapRpcMineBattleRsp {
    repeated Army Armies = 1;
    repeated Army InjuredArmies = 2;
}
    
message MapRpcFindMinerRsp {
    MapMiner MapMiner = 1;
}
    
message MapRpcRefreshPointParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcCampParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
}
    
message MapRpcCancelCampParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
}
    
message MapRpcChangeOwnerParams {
    int32 PosNum = 1;
    string UserId = 2;
}
    
message MapRpcResDoubleParams {
    int32 PosNum = 1;
}
    
message MapRpcGetLuckyMoneyParams {
    string Uuid = 1;
    string PlayerId = 2;
}
    
message MapRpcChangeAllianceBuildingValueParams {
    int32 PosNum = 1;
    int32 Value = 2;
}
    
message MapRpcChangeRecStateParams {
    int32 PosNum = 1;
    int32 State = 2;
}
    
message MapRpcCallRallyMonsterParams {
    int32 CenterX = 1;
    int32 CenterY = 2;
    int32 ConfId = 3;
}
    
message MapRpcCallRallyMonsterRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcSearchParams {
    int32 CenterX = 1;
    int32 CenterY = 2;
    int32 Category = 3;
    string Key = 4;
    int32 Idx = 5;
}
    
message MapRpcSearchRsp {
    MapRec Rec = 1;
    float Dist = 2;
}
    
message RpcNearbyBuildPlaceParams {
    int32 X = 1;
    int32 Y = 2;
    int32 SideLen = 3;
}
    
message RpcNearbyBuildPlaceRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message RpcCleanRallyMonsterParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcUpdateMiningArmiesRsp {
    int64 FinishAt = 1;
}
    
message RpcUpdateMonsterArmiesParams {
    int32 X = 1;
    int32 Y = 2;
    RallyMonsterTeams Teams = 3;
    int32 TotalHealth = 4;
}
    
message RpcGetRallyMonsterParams {
    int32 X = 1;
    int32 Y = 2;
    int32 MonsterId = 3;
}
    
message RpcGetRallyMonsterRsp {
    RallyMonsterTeams Teams = 1;
}
    
message MapRpcBroadcastBattle {
    string EventId = 1;
    int32 X = 2;
    int32 Y = 3;
    bool IsWin = 4;
}
    
message MapRpcZoneInfos {
    int32 Zone = 1;
}
    
message MapRpcZoneInfosRsp {
    int32 Zone = 1;
    int32 MineAlive = 2;
    int32 MineDeath = 3;
    int32 MineNeed = 4;
    int32 MonsterAlive = 5;
    int32 MonsterDeath = 6;
}
    
message MapRpcZoneDetail {
    int32 Zone = 1;
}
    
message MapRpcZoneDetailRsp {
    int32 Zone = 1;
    MapRpcZoneInfosRsp Summary = 2;
    repeated MapZoneItem MineDetail = 3;
    repeated MapZoneItem MonsterDetail = 4;
    repeated Point MinePoints = 5;
    repeated Point MonsterPoints = 6;
}
    
message MapZoneItem {
    int32 Level = 1;
    int32 Amount = 2;
    repeated Point Points = 3;
}
    
message GetNumberOfOnlineParams {
    string ServerId = 1;
}
    
message NumberOfOnlineRsp {
    string ServerId = 1;
    int32 Number = 2;
}
    
message GetAlliancesByServerIdParams {
    string ServerId = 1;
    int32 Offset = 2;
    int32 Limit = 3;
}
    
message AlliancesByServerIdRsp {
    int32 Offset = 1;
    repeated AllianceInfo Alliances = 2;
}
    
message GetAllianceMembersParams {
    string ServerId = 1;
    string AllianceId = 2;
}
    
message GetAllianceMembersRsp {
    repeated AllianceMember Members = 1;
}
    
message SetServerShieldParams {
    int64 Till = 1;
}
    
message MapRecoverBaseParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
}
    
message GetRankingListParams {
    int32 Category = 1;
    int32 Offset = 2;
    int32 Limit = 3;
}
    
message GetRankingListRsp {
    int32 Category = 1;
    int32 Offset = 2;
    int32 SelfRank = 3;
    repeated RankMsg RankInfo = 4;
}
    
message MapRpcBroadcastFlyCity {
    int32 FromX = 1;
    int32 FromY = 2;
    int32 ToX = 3;
    int32 ToY = 4;
}
    
message MapRpcRefreshZoneParams {
    int32 Zone = 1;
}
    
message MapRpcGetHuntPointParams {
    int32 CenterX = 1;
    int32 CenterY = 2;
    repeated int32 Existed = 3;
}
    
message MapRpcGetHuntPointRsp {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcBroadcastCannonAttack {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcSearchOrCreateMonsterParams {
    int32 CenterX = 1;
    int32 CenterY = 2;
    int32 Level = 3;
    int32 Category = 4;
    string Key = 5;
}
    
message MapExpireCreateMonsterParams {
    int32 Id = 1;
}
    
message MapRpcCleanRecParams {
    int32 X = 1;
    int32 Y = 2;
}
    
message MapRpcAllianceBuildingFinishParams {
    int32 PosNum = 1;
}
    
message MapRpcChangeParams {
    int32 PosNum = 1;
    string Param = 2;
}
    
message GetAllianceBaseInfoParams {
    string ServerId = 1;
    string AllianceId = 2;
}
    
message GetAllianceBaseInfoRsp {
    Alliance Info = 1;
    repeated AllianceMember Members = 2;
    repeated AllianceTech Tech = 3;
    repeated AllianceBattleLog BattleLog = 4;
}
    
message MissionUnderSpyParams {
    string SpyerId = 1;
    string SpyerName = 2;
    string SpyerAvatar = 3;
    string SpyerAlliance = 4;
    int32 RadarLevel = 5;
    int32 BaseLevel = 6;
    int32 Language = 7;
    MapRec MapRec = 8;
}
    
message MissionUnderMarchParams {
    MissionEvent Event = 1;
    UserPublicInfo UserInfo = 2;
}
    
message MissionFinishMiningParams {
    string EventId = 1;
}
    
message MissionOnFinishMiningParams {
    bool Success = 1;
    string EventId = 2;
    int32 ConfId = 3;
    int32 Amount = 4;
    bool IsAlliance = 5;
    bool IsFullMined = 6;
}
    
message MissionOnStartMiningParams {
    bool Success = 1;
    string EventId = 2;
    int64 FinishAt = 3;
    float MineSpeed = 4;
    int32 MineLeft = 5;
}
    
message MissionUnderAttackParams {
    int32 X = 1;
    int32 Y = 2;
    string UserId = 3;
    string EventId = 4;
    string ServerId = 5;
    int32 UserX = 6;
    int32 UserY = 7;
    string Avatar = 8;
    string UserName = 9;
    string AllianceName = 10;
    repeated MissionTeam MissionTeams = 11;
    repeated Buff CustomizedBuff = 12;
    int32 DuelAmount = 13;
    string AllianceId = 14;
}
    
message MissionAttackRsp {
    bool IsWin = 1;
    bool IsBase = 2;
    int32 BattleType = 3;
    repeated BattleResult Results = 4;
}
    
message MissionAttackMineRsp {
    bool IsWin = 1;
    BattleResult Result = 2;
    repeated ResAmount PlunderRes = 3;
}
    
message MissionStatisticsParams {
    bool IsPvp = 1;
    bool IsRally = 2;
    bool IsMain = 3;
    bool IsWin = 4;
    int32 Side = 5;
    int32 RallyAmount = 6;
    int32 Beat = 7;
    int32 Kill = 8;
    int32 TrapKill = 9;
    int32 BeatAssist = 10;
    int32 KillAssist = 11;
    int32 Dead = 12;
    int32 Injured = 13;
    double ArmyPowerLose = 14;
    double TrapPowerLose = 15;
    repeated Army BeatArmies = 16;
}
    
message MissionOnCancelAssistParams {
    string HolderId = 1;
    MissionTeam MissionTeam = 2;
    int32 StopX = 3;
    int32 StopY = 4;
    int64 Duration = 5;
}
    
message MissionOnSplitAssistParams {
    MissionTeam MissionTeam = 1;
    int32 StopX = 2;
    int32 StopY = 3;
}
    
message MissionOnChangeToAssistParams {
    int32 X = 1;
    int32 Y = 2;
    string EventId = 3;
    int32 Status = 4;
}
    
message MissionGetEnemyResistBuffParams {
    
}
    
message BattleResult {
    bool IsWin = 1;
    string UserId = 2;
    repeated Reward Rewards = 3;
    MissionTeam MissionTeam = 4;
    int32 Beat = 5;
}
    
message MissionOnCombineAssistParams {
    string CombinedAssistId = 1;
    MissionTeam MissionTeam = 2;
}
    
message MissionRemoveAssistInfoParams {
    string AssistUserId = 1;
    int32 PosNum = 2;
    int64 Duration = 3;
}
    
message MissionDelMarchWarningParams {
    string EventId = 1;
}
    
message TargetDelMarchWarningParams {
    int32 Pos = 1;
}
    
message MissionUnderAIMarchParams {
    AIMissionEvent Event = 1;
    UserPublicInfo UserInfo = 2;
}
    
message MissionOnCancelSiegeParams {
    
}
    
message MissionOnCancelExploreParams {
    string EventId = 1;
}
    
message MissionOnUpdateArmiesParams {
    string EventId = 1;
    repeated Army Armies = 2;
    repeated Army InjurdArmies = 3;
    repeated GiantBeast Beasts = 4;
}
    
message MissionUnderRallyMarchParams {
    MissionEvent Event = 1;
    UserPublicInfo UserInfo = 2;
    int32 Category = 3;
    int64 MarchAt = 4;
    int64 ArriveAt = 5;
}
    
message UpdateWarningParams {
    MissionEvent Event = 1;
    bool March = 2;
}
    
message MissionOnChangeToRallyMarchParams {
    string EventId = 1;
    int64 FinishAt = 2;
    int32 Duration = 3;
    int64 SpeedChangeAt = 4;
    int32 SpeedChangeDistance = 5;
    int64 CreateAt = 6;
}
    
message MissionRpcRallySpeedUpParams {
    string EventId = 1;
    int32 SpeedUpConfId = 2;
}
    
message MissionOnChangeToRallyReturnParams {
    string EventId = 1;
    int64 FinishAt = 2;
    int32 Duration = 3;
    int64 SpeedChangeAt = 4;
    int32 SpeedChangeDistance = 5;
    int64 CreateAt = 6;
}
    
message SpyRsp {
    int32 Result = 1;
}
    
message MissionRpcReturnMissionParams {
    string EventId = 1;
}
    
message BattleCareParams {
    repeated Army Dead = 1;
    repeated Army Injured = 2;
    string AttackerName = 3;
}
    
message RpcGetRallyCaptainMissionParams {
    string EventId = 1;
}
    
message RpcGetRallyCaptainMissionRsp {
    MapMarchLine Mission = 1;
}
    
message MapRpcAskForSubNameParams {
    string ServerId = 1;
    string Name = 2;
    string AllianceId = 3;
}
    
message MapRpcAskForSubNameRsp {
    string SubName = 1;
}
    
message UserRpcUpdateSearchParams {
    string UserId = 1;
    string OldName = 2;
    string NewName = 3;
}
    
message UserRpcAddSearchParams {
    string UserId = 1;
    string Name = 2;
}
    
message UserRpcSearchParams {
    string Prefix = 1;
    int32 Limit = 2;
}
    
message UserRpcSearchRsp {
    repeated string UserIds = 1;
}
    
message RpcSearchAllianceParams {
    string Name = 1;
}
    
message RpcAddAllianceSearchParams {
    string Name = 1;
    string ShortName = 2;
    string AllianceId = 3;
}
    
message RpcDelAllianceSearchParams {
    string Name = 1;
    string ShortName = 2;
}
    
message PurchaseOnSuccessParams {
    string CpOrderId = 1;
    string ProductId = 2;
    int32 SubCoin = 3;
    int32 ExtraCoin = 4;
    string Currency = 5;
    string Money = 6;
}
    
message PurchaseOnSuccessRsp {
    bool Success = 1;
    bool Repeat = 2;
    string Msg = 3;
}
    
message SubscriptionOnSuccessParams {
    string OrderID = 1;
    int64 OriginalOrderID = 2;
    string ProductId = 3;
    int64 ExpiresDate = 4;
    int32 IsSandBox = 5;
    int32 Type = 6;
}
    
message SendOnSuccessParams {
    string CpOrderId = 1;
    string ProductId = 2;
    int32 SubCoin = 3;
    int32 ExtraCoin = 4;
    string Currency = 5;
    string Money = 6;
}
    
message SendOnSuccessRsp {
    bool Success = 1;
    bool Repeat = 2;
    string Msg = 3;
}
    
message BackstageCreateOrderParams {
    string ProductId = 1;
    int32 ConfId = 2;
    int32 Category = 3;
}
    
message BackstageCreateOrderRsp {
    string OrderId = 1;
}
    
message AttackRallyMonsterParams {
    string ServerId = 1;
    string UserId = 2;
    int32 UserX = 3;
    int32 UserY = 4;
    int32 X = 5;
    int32 Y = 6;
    int32 MonsterId = 7;
    repeated MissionTeam MissionTeams = 8;
    string AllianceBattleId = 9;
    string AllianceId = 10;
}
    
message AttackRallyMonsterRsp {
    bool IsWin = 1;
    int32 RemainHp = 2;
    repeated Reward LeaderBloodRewards = 3;
}
    
message RoomJoinParams {
    string RoomId = 1;
    string PlayerId = 2;
}
    
message RoomJoinResponse {
    bool Success = 1;
}
    
message RoomLeaveParams {
    string RoomId = 1;
    string PlayerId = 2;
}
    
message RoomLeaveResponse {
    bool Success = 1;
}
    
message RoomBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    bytes Data = 3;
    repeated string Except = 4;
}
    
message BackStageMailBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    BackStageMail BackStageMail = 3;
}
    
message NotifyBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    NotifyInfo NotifyInfo = 3;
}
    
message ActivityBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    ActivityRpcInfo ActivityInfo = 3;
}
    
message ActivityRpcInfo {
    int32 ActivityId = 1;
    bool Open = 2;
    int64 OpenTill = 3;
    int32 Uuid = 4;
}
    
message GiftGroupBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    GiftGroupRpcInfo GroupInfo = 3;
}
    
message GiftGroupRpcInfo {
    int32 GroupId = 1;
    int32 Type = 2;
}
    
message ServerShieldBroadcastParams {
    string RoomId = 1;
    string PlayerId = 2;
    ServerShieldRpcInfo ShieldInfo = 3;
}
    
message ServerShieldRpcInfo {
    int64 ExpireAt = 1;
}
    
message ActivityStageUpdateInfo {
    int32 ActivityId = 1;
    int32 Stage = 2;
    int32 Trigger = 3;
    int64 StageEndAt = 4;
    int64 ReadyTill = 5;
}
    
message ActivityStageUpdateParams {
    string RoomId = 1;
    string PlayerId = 2;
    ActivityStageUpdateInfo UpdateInfo = 3;
}
    
message KingdomInfoUpdateParams {
    string RoomId = 1;
    string PlayerId = 2;
    KingInfo KingInfo = 3;
}
    
message AllianceTaskUpdateBroadcastParams {
    string RoomId = 1;
}
    
message SiegeRpcStartMarchParam {
    int32 Round = 1;
    bool IsRally = 2;
    int32 BaseX = 3;
    int32 BaseY = 4;
    repeated MissionTeam Missions = 5;
    string Uuid = 6;
}
    
message SiegeRpcRoundStartParams {
    string AllianceId = 1;
    int32 Times = 2;
    int32 RallyNum = 3;
    int32 Round = 4;
}
    
message SiegeRpcPlayerRoundResultParam {
    int32 Round = 1;
    bool End = 2;
    int32 AddScore = 3;
}
    
message SiegeRpcPlayerAssistResultParam {
    string AssistedPlayer = 1;
    int32 AddScore = 2;
    int32 Killed = 3;
}
    
message SiegeRpcParticipateParam {
    string UserId = 1;
}
    
message SiegeRpcExploreEndParam {
    
}
    
message SiegeRpcSumParam {
    
}
    
message SiegeRpcRoundReadyParam {
    int64 RunAt = 1;
    AllianceSiegeInfo SiegeInfo = 2;
}
    
message TipRpcSendParams {
    int32 Id = 1;
    repeated string Params = 2;
}
    
message UserCheckInfoParams {
    
}
    
message UserCheckInfoRsp {
    string Name = 1;
    int32 Level = 2;
    int32 Gem = 3;
}
    
message UserRpcChangeEnergyParams {
    int32 Energy = 1;
}
    
message RecoverBaseParams {
    
}
    
message PushPlayerServerShieldParams {
    int64 ProtectedAt = 1;
}
    
message ResetPlayerBeatNumParams {
    string PlayerId = 1;
}
    
message CleanPlayerAllianceInfoParams {
    
}
    
message SettleWarZoneRankRewardParams {
    int32 Period = 1;
}
    